{"version":3,"sources":["actions/types.js","reducers/auth.js","reducers/index.js","store.js","media/video.mp4","components/ButtonElement.js","components/BannerSection/BannerElements.js","components/BannerSection/index.js","components/InfoSection/InfoElements.js","components/InfoSection/index.js","components/InfoSection/Data.js","components/TwitchWidget/TwitchElements.js","components/TwitchWidget/index.js","components/TwitchWidget/Data.js","containers/Home.js","components/container.js","actions/auth.js","media/images/dope333.webp","containers/Login.js","media/images/dndshop.jpg","media/images/library.jpg","media/images/buildsbg.png","components/BuildsPage/BuildsElements.js","containers/Signup.js","containers/Activate.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","media/Logo.png","components/Navbar/NavbarElements.js","components/Navbar/index.js","components/Sidebar/SidebarElements.js","components/Sidebar/index.js","components/Footer/FooterElements.js","components/Footer/index.js","hocs/Layout.js","media/raceImages/dragonborn.png","media/raceImages/half-elf.png","media/raceImages/dwarf.png","media/raceImages/elf.png","media/raceImages/gnome.png","media/raceImages/half-orc.png","media/raceImages/halfling.png","media/raceImages/tiefling.png","media/raceImages/index.js","media/raceImages/human.png","components/BuildLibPage/index.js","containers/Library.js","media/classImages/barbarian.png","media/classImages/bard.png","media/classImages/druid.png","media/classImages/index.js","media/classImages/cleric.png","media/classImages/fighter.png","media/classImages/monk.png","media/classImages/paladin.png","media/classImages/ranger.png","media/classImages/rogue.png","media/classImages/sorcerer.png","media/classImages/warlock.png","media/classImages/wizard.png","components/Incrementor/IncElements.js","components/Incrementor/Inc.js","components/Incrementor/clamp.js","components/BuildsPage/RaceSelect.js","components/BuildsPage/ClassSelect.js","components/PopUp/PopUpElements.js","components/PopUp/index.js","components/BuildsPage/StatCalc.js","components/BuildsPage/index.js","containers/Builds.js","components/ChatSection/MessagForm.jsx","components/ChatSection/MyMessage.jsx","components/ChatSection/TheirMessage.jsx","components/ChatSection/ChatFeed.jsx","components/ChatSection/index.js","containers/Chat.js","containers/HeroStats.js","media/images/buildsbg2.png","components/ClassesSection/ClassesElements.js","components/ClassesSection/index.js","containers/Classes.js","App.js","index.js"],"names":["LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","LOGOUT","initialState","access","localStorage","getItem","refresh","isAuthenticated","user","combineReducers","auth","state","action","type","payload","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Button","styled","Link","primary","big","dark","fontBig","BannerContainer","div","BannerBg","VideoBg","video","BannerContent","BannerH1","h1","BannerP","p","BannerBtnWrapper","ArrowForward","MdArrowForward","ArrowRight","MdKeyboardArrowRight","BannerSection","useState","hover","setHover","onHover","autoPlay","loop","muted","src","Video","to","onMouseEnter","onMouseLeave","InfoContainer","lightBg","InfoWrapper","InfoRow","imgStart","imgstart","Column1","Column2","TextWrapper","TopLine","Heading","Subtitle","BtnWrap","InfoSection","id","topLine","lightText","darkText","headline","description","buttonLabel","sourceType","screenName","options","height","homeObjOne","lightTextDesc","darktext","TwitchWidget","channel","theme","onVideoPause","console","log","homeObjTwo","Home","Component","load_user","dispatch","a","config","headers","axios","get","process","res","data","logout","connect","login","email","password","body","JSON","stringify","post","then","response","catch","error","formData","setFormData","onChange","e","target","name","value","style","backgroundImage","background","backgroundPosition","backgroundSize","backgroundRepeat","width","marginTop","className","onSubmit","preventDefault","placeholder","required","minLength","ClassSectionStyle","ClassTitle","ClassTextBox","ClassImageBox","BackgroundContainer","DropDownStyle","BuildTitle","RaceTextBox","RaceImageBox","LibraryContainer","library","SignUpContainer","signup","re_password","chat_pass","accountCreated","setAccountCreated","method","url","username","secret","Axios","verify","uid","token","match","verified","setVerified","onClick","params","reset_password","requestSent","setRequestSent","reset_password_confirm","new_password","re_new_password","Nav","nav","NavLink","Bars","FaBars","NavMenu","NavBtn","NavBtnLink","toggle","Logo","alt","SidebarContainer","aside","isOpen","CloseIcon","FaTimes","Icon","SidebarWrapper","SidebarLink","LinkR","LinkS","SideBtnWrap","SidebarRoute","SidebarMenu","ul","Sidebar","FooterContainer","footer","FooterWrap","FooterLinksContainer","FooterLinksWrapper","FooterLinkItems","FooterLinkTitle","FooterLink","SocialIcons","section","SocialIconLink","href","checkAuthenticated","code","props","useEffect","setIsOpen","children","imgMap","dragonborn","halfelf","dwarf","tiefling","halfling","halforc","gnome","elf","MediaCard","makeStyles","media","color","padding","paddingTop","objectPosition","build","Card","sx","maxWidth","backgroundColor","CardMedia","component","image","race_type","CardContent","Typography","gutterBottom","variant","class_type","STR","DEX","CON","INT","WIS","CHA","CardActions","size","Name","getData","onDelete","Library","Paper","typography","body2","spacing","textAlign","palette","text","secondary","allBuilds","setAllBuilds","getBuilds","err","Container","Box","flexGrow","Grid","container","alignItems","map","item","xs","sm","ClassImgMap","barbarian","bard","druid","IncContainer","IncButton","button","IncValue","Incrementor","min","max","Counter","availPoints","CurrentPoints","Mod","clampV","v","clamp","disableMin","disableMax","disabled","icon","faMinusSquare","faPlusSquare","margin","TabPanel","index","other","role","hidden","a11yProps","RaceSelect","selectedRace","handleChange","race","raceOptions","React","setValue","columns","label","Tabs","event","newValue","scrollButtons","allowScrollButtonsMobile","Tab","alignment","age","size_description","speed","language_desc","ClassSelect","selectedClass","classes","classOptions","handleChange2","ClassImageMap","font","hit_die","PopUpBox","Cursor","PopUp","trigger","setTrigger","StatCalc","usedPoints","availablePoints","totalPoints","trackUsedPoints","trackAvailablePoints","valueStr","valueDex","valueCon","valueInt","valueWis","valueCha","StrCount","setStrValue","setStrCounter","DexCount","setDexValue","setDexCounter","ConCount","setConValue","setConCounter","IntCount","setIntValue","setIntCounter","WisCount","setWisValue","setWisCounter","ChaCount","setChaValue","setChaCounter","StrModCount","setStrModCounter","DexModCount","setDexModCounter","ConModCount","setConModCounter","IntModCount","setIntModCounter","WisModCount","setWisModCounter","ChaModCount","setChaModCounter","buttonPopup","setButtonPopup","buttonPopup2","setButtonPopup2","buttonPopup3","setButtonPopup3","buttonPopup4","setButtonPopup4","buttonPopup5","setButtonPopup5","buttonPopup6","setButtonPopup6","class","Inc","count","points","trackpoints","modpoints","BuildsPage","open","setOpen","setName","setSelectedRace","setSelectedClass","userId","getState","setRaceOptions","setAllRaces","getAllRaces","resp","results","setRace","setClassOptions","setAllClasses","getAllClasses","setClasses","html","proficiency_choices","from","forEach","prof","document","querySelector","innerHTML","html2","proficiencies","html3","saving_throws","bonus","Collapse","in","Alert","severity","IconButton","fontSize","mb","TextField","postData","hero","Builds","MessageForm","chatId","creds","handleSubmit","trim","length","sendMessage","isTyping","fontFamily","htmlFor","PictureOutlined","multiple","display","files","bind","SendOutlined","MyMessage","message","attachments","file","float","marginRight","TheirMessage","lastMessage","isFirstMessageByUser","sender","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","person","last_read","title","keys","Object","key","lastMessageKey","renderMessages","ChatSection","storeState","userPass","userSecret","projectID","renderChatFeed","chatAppProps","Chat","HeroStats","checkPoints","alert","BGContainer","ClassesSection","selectedValue","setSelectedValue","Classes","App","exact","path","Login","Signup","ResetPassword","ResetPasswordConfirm","Activate","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8424274d.chunk.js","sourcesContent":["export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL'; \nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL'; \nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL'; \nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL'; \nexport const LOGOUT= 'LOGOUT'; ","import {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    PASSWORD_RESET_SUCCESS,\n    PASSWORD_RESET_FAIL,\n    PASSWORD_RESET_CONFIRM_SUCCESS,\n    PASSWORD_RESET_CONFIRM_FAIL,\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    ACTIVATION_SUCCESS,\n    ACTIVATION_FAIL,\n    LOGOUT\n} from '../actions/types';\n\nconst initialState = {\n    access: localStorage.getItem('access'),\n    refresh: localStorage.getItem('refresh'),\n    isAuthenticated: null,\n    user: null\n};\n\nexport default function auth(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case AUTHENTICATED_SUCCESS:\n            return{\n                ...state,\n                isAuthenticated: true\n            }\n        case LOGIN_SUCCESS:\n            localStorage.setItem('access', payload.access);\n            return{\n                ...state,\n                isAuthenticated: true,\n                access: payload.access,\n                refresh: payload.refresh\n                \n            }\n        case SIGNUP_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: false\n            }\n        case USER_LOADED_SUCCESS:\n            return{\n                ...state,\n                user: payload\n            }\n        case AUTHENTICATED_FAIL:\n            return{\n                ...state,\n                 isAuthenticated: false\n            }\n        case USER_LOADED_FAIL:\n            return{\n                ...state,\n                user: null\n            }\n        case LOGIN_FAIL:\n        case SIGNUP_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('access');\n            localStorage.removeItem('refresh');\n            return{\n                ...state,\n                access: null,\n                refresh: null,\n                isAuthenticated: false,\n                user: null\n            }\n        case PASSWORD_RESET_SUCCESS:\n        case PASSWORD_RESET_FAIL:\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\n        case PASSWORD_RESET_CONFIRM_FAIL:\n        case ACTIVATION_SUCCESS:\n        case ACTIVATION_FAIL:\n            return{\n                ...state\n            }\n        default:\n            return state;\n    }//end switch\n};","import { combineReducers } from 'redux';\nimport auth from './auth';\n\nexport default combineReducers({\n    auth\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState, \n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n\n\n","export default __webpack_public_path__ + \"static/media/video.0d77f890.mp4\";","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Button = styled(Link)`\n    border-radius: 50px;\n    background: ${({primary}) => (primary ? '#512c9c' : '#010606')};\n    white-space: nowrap;\n    padding: ${({big}) => (big ? '14 px 48px' : '12px 30px')};\n    color: ${({dark}) => (dark ? '#010606' : '#fff')};\n    font-size: ${({fontBig}) => (fontBig ? '20px' : '16px')};\n    outline: none;\n    border: none;\n    cursor: pointer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    transition: all 0.2s ease-in-out;\n    text-decoration: none; \n\n    &:hover{\n        transition: all 0.2s ease-in-out;\n        background: ${({primary}) => (primary ? '#fff' : '#512c9c')};\n    }\n`","import styled from \"styled-components\";\nimport {MdKeyboardArrowRight, MdArrowForward} from 'react-icons/md';\n\nexport const BannerContainer = styled.div`\n    background: #0c0c0c;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 0 30px;\n    height: 800px;\n    position: relative;\n    z-index: 1;\n\n`\n\nexport const BannerBg = styled.div`\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n`\n\nexport const VideoBg = styled.video`\n    width: 100%;\n    height: 100%;\n    -o-object-fit: cover;\n    object-fit: cover;\n    background: #232a34;\n    filter: brightness(60%);\n`\nexport const BannerContent = styled.div`\n    z-index: 3;\n    max-width: 1200px;\n    position: absolute;\n    padding: 8px 24px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n\nexport const BannerH1 = styled.h1`\n    color: #fff;\n    font-size: 48px;\n    text-align: center;\n\n    @media screen and (max-width: 768px){\n        font-size: 40px;\n    }\n\n    @media screen and (max-width: 480px){\n        font-size: 32px;\n    }\n`\n\nexport const BannerP = styled.p`\n    margin-top: 24px;\n    color: #fff;\n    font-size: 24px;\n    text-align: center;\n    max-width: 600px;\n\n    @media screen and (max-width: 768px){\n        font-size: 24px;\n    }\n\n    @media screen and (max-width: 480px){\n        font-size: 18px;\n    }\n`\nexport const BannerBtnWrapper = styled.div`\n    margin-top: 32px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\nexport const ArrowForward = styled(MdArrowForward)`\n    margin-left: 8px;\n    font-size: 20px;\n`\nexport const ArrowRight = styled(MdKeyboardArrowRight)`\n    margin-left: 8px;\n    font-size: 20px;\n`","import React, {useState} from 'react'\nimport Video from '../../media/video.mp4'\nimport {Button} from '../ButtonElement'\nimport {\n    BannerContainer,\n    BannerBg,\n    VideoBg,\n    BannerContent,\n    BannerH1, \n    BannerP,\n    BannerBtnWrapper,\n    ArrowForward,\n    ArrowRight\n} from './BannerElements';\n\nconst BannerSection = () => {\n    const [hover, setHover] = useState(false)\n    const onHover = () => {\n        setHover(!hover)\n    }\n\n    return (\n        <BannerContainer>\n            <BannerBg>\n                <VideoBg autoPlay loop muted src={Video} type='video.mp4' />\n            </BannerBg>\n            <BannerContent>\n                <BannerH1>Welcome Adventurers!</BannerH1>\n                <BannerP>\n                    Creating your hero has never been easy before! Start building today!\n                </BannerP>\n                <BannerBtnWrapper>\n                    <Button to='/signup' onMouseEnter={onHover} onMouseLeave = {onHover}\n                    primary='true'\n                    dark='true'>\n                        Get started {hover ? <ArrowForward /> : <ArrowRight />}\n                    </Button>\n                </BannerBtnWrapper>\n            </BannerContent>\n        </BannerContainer>\n    )\n}\n\nexport default BannerSection\n","import styled from 'styled-components';\n\nexport const InfoContainer = styled.div`\n    color: #fff;\n    background: ${({lightBg})=> (lightBg ? '#f9f9f9' : '#010606')};\n\n    @media screen and (max-width: 768px) {\n        padding: 100px 0;\n    }\n`\nexport const InfoWrapper = styled.div`\n    display: grid;\n    z-index: 1;\n    height: 860px;\n    width: 100%\n    max-width: 1100px;\n    margin-right: auto;\n    margin-left: auto;\n    padding: 0 24px;\n    justify-content: center;\n`\n\nexport const InfoRow = styled.div`\n    display: grid;\n    grid-auto-columns: minmax(auto, 1fr);\n    align-items: center;\n    grid-template-areas: ${({imgStart}) => (imgStart ? `'col2 col1'` : `'col1 col2'`)};\n\n    @media screen and (max-width: 768px) {\n        grid-template-areas: ${({imgstart}) => (imgstart ? `'col1' 'col2'` : `'col1 col1' 'col2 col2'`)};\n    }\n`\n\nexport const Column1 = styled.div`\n    margin-bottom: 16px;\n    padding: 0 15px;\n    grid-area: col1;\n`\n\nexport const Column2 = styled.div`\n    margin-bottom: 16px;\n    padding: 0 15px;\n    grid-area: col2;\n`\n\nexport const TextWrapper = styled.div`\n    max-width: 540px;\n    padding-top: 0;\n    padding-bottom: 60px;\n`\n\nexport const TopLine = styled.p`\n    color: #512c9c;\n    font-size: 16px;\n    line-height: 16px;\n    font-weight: 700;\n    letter-spacing: 1.4px;\n    text-transform; uppercase;\n    margin-bottom: 16px;\n    font-family: \"Helvetica\";\n`\n\nexport const Heading = styled.h1`\n    margin-bottom: 24px;\n    font-size: 48px;\n    line-height: 1.1;\n    font-weight: 600;\n    color: #fff;\n    font-family: \"Helvetica\";\n    @media screen and (max-width: 480px){\n        font-size: 32px;\n    }\n    \n`\n\nexport const Subtitle = styled.p`\n    max-width: 440px;\n    margin-bottom: 35px;\n    font-size: 18px;\n    line-height: 24px;\n    color: #fff;\n    font-family: \"Helvetica\";\n`\nexport const BtnWrap = styled.div`\n    display: flex;\n    justify-content: flex-start;\n`\n","import React from 'react'\nimport { Button } from '../ButtonElement'\nimport { TwitterTweetEmbed, TwitterTimelineEmbed } from 'react-twitter-embed'\nimport { \n    InfoContainer,\n    InfoWrapper,\n    InfoRow,\n    Column1,\n    Column2,\n    TextWrapper,\n    TopLine,\n    Heading,\n    Subtitle,\n    BtnWrap,\n} from './InfoElements'\n\nconst InfoSection = ({lightBg, id, topLine, lightText, darkText, headline, description, buttonLabel}) => {\n    return (\n        <>\n        <InfoContainer lightBg={lightBg} id={id}>\n            <InfoWrapper>\n                <InfoRow>\n                    <Column1>\n                    <TextWrapper>\n                        <TopLine>{topLine}</TopLine>\n                        <Heading lightText={lightText}>{headline}</Heading>\n                        <Subtitle darkText ={darkText}>{description}</Subtitle>\n                        <BtnWrap>\n                            <Button to='/login'>{buttonLabel}</Button>\n                        </BtnWrap>\n                    </TextWrapper>\n                    </Column1>\n                    <Column2>\n                    <TwitterTimelineEmbed\n                        sourceType=\"profile\"\n                        // The preferred screen name goes next: \n                        screenName=\"Wizards_DnD\"\n                        // Style options goes here:\n                        options={{ height: \"600px\" }}\n                    />\n                    </Column2>\n                </InfoRow>\n            </InfoWrapper>\n        </InfoContainer>  \n        </>\n    )\n}\n\nexport default InfoSection\n","export const homeObjOne = {\n    id: 'about',\n    lightBg: false, \n    lightText: true,\n    lightTextDesc: true,\n    topLine: 'Dnd Twitter!',\n    headline: 'Lastest Updates and News',\n    description: 'Our website provides resources for you to check out and to make your dnd campaign easier! Check out the latest news and updated from the Dungeons and Dragons\\' offical page',\n    buttonLabel: 'Get Started',\n    dark: true,\n    primary: true,\n    darktext: false\n}","import styled from 'styled-components';\n\nexport const InfoContainer = styled.div`\n    color: #fff;\n    background: ${({lightBg})=> (lightBg ? '#f9f9f9' : '#010606')};\n\n    @media screen and (max-width: 768px) {\n        padding: 100px 0;\n    }\n`\nexport const InfoWrapper = styled.div`\n    display: grid;\n    z-index: 1;\n    height: 1000px;\n    width: 100%\n    max-width: 1100px;\n    margin-right: auto;\n    margin-left: auto;\n    padding: 0 24px;\n    justify-content: center;\n`\n\nexport const InfoRow = styled.div`\n    display: grid;\n    grid-auto-columns: minmax(auto, 1fr);\n    align-items: center;\n    grid-template-areas: ${({imgStart}) => (imgStart ? `'col2 col1'` : `'col1 col2'`)};\n\n    @media screen and (max-width: 768px) {\n        grid-template-areas: ${({imgstart}) => (imgstart ? `'col1' 'col2'` : `'col1 col1' 'col2 col2'`)};\n    }\n`\n\nexport const Column1 = styled.div`\n    margin-bottom: 16px;\n    padding: 0 15px;\n    grid-area: col1;\n`\n\nexport const Column2 = styled.div`\n    margin-bottom: 16px;\n    padding: 0 15px;\n    grid-area: col2;\n`\n\nexport const TextWrapper = styled.div`\n    max-width: 540px;\n    padding-top: 0;\n    padding-bottom: 60px;\n`\n\nexport const TopLine = styled.p`\n    color: #512c9c;\n    font-size: 16px;\n    line-height: 16px;\n    font-weight: 700;\n    letter-spacing: 1.4px;\n    text-transform; uppercase;\n    margin-bottom: 16px;\n    font-family: \"Helvetica\";\n`\n\nexport const Heading = styled.h1`\n    margin-bottom: 24px;\n    font-size: 48px;\n    line-height: 1.1;\n    font-weight: 600;\n    color: #fff;\n    font-family: \"Helvetica\";\n    @media screen and (max-width: 480px){\n        font-size: 32px;\n    }\n    \n`\n\nexport const Subtitle = styled.p`\n    max-width: 440px;\n    margin-bottom: 35px;\n    font-size: 18px;\n    line-height: 24px;\n    color: #fff;\n    font-family: \"Helvetica\";\n`\nexport const BtnWrap = styled.div`\n    display: flex;\n    justify-content: flex-start;\n`\n","import React from 'react'\nimport { Button } from '../ButtonElement'\nimport { TwitchEmbed, TwitchChat, TwitchClip, TwitchPlayer } from 'react-twitch-embed';\nimport { \n    InfoContainer,\n    InfoWrapper,\n    InfoRow,\n    Column1,\n    Column2,\n    TextWrapper,\n    TopLine,\n    Heading,\n    Subtitle,\n    BtnWrap,\n} from './TwitchElements'\n\nconst TwitchWidget = ({lightBg, id, topLine, lightText, darkText, headline, description, buttonLabel}) => {\n    return (\n        <>\n        <InfoContainer lightBg={lightBg} id={id}>\n            <InfoWrapper>\n                <InfoRow>\n                    <Column1>\n                    <TextWrapper>\n                        <TopLine>{topLine}</TopLine>\n                        <Heading lightText={lightText}>{headline}</Heading>\n                        <Subtitle darkText ={darkText}>{description}</Subtitle>\n                        <BtnWrap>\n                            <Button to='/login'>{buttonLabel}</Button>\n                        </BtnWrap>\n                    </TextWrapper>\n                    </Column1>\n                    <Column2>\n                    <TwitchEmbed\n                        channel=\"moonstar_x\"\n                        id=\"moonstar_x\"\n                        theme=\"dark\"\n                        muted\n                        onVideoPause={() => console.log(':(')}\n                        \n                    />\n                    {/* <TwitchChat channel=\"moonstar_x\" theme=\"dark\" /> */}\n                    {/* <TwitchChat channel=\"moonstar_x\" theme=\"dark\" />\n                    <TwitchClip clip=\"WealthyBumblingKimchiItsBoshyTime\" parent={['mycoolsite.com, anotherawesomesite.net']} />\n                    <TwitchPlayer video=\"333014765\" /> */}\n                    </Column2>\n                </InfoRow>\n                \n            </InfoWrapper>\n        </InfoContainer>  \n        </>\n    )\n}\n\nexport default TwitchWidget\n","export const homeObjTwo = {\n    id: 'about',\n    lightBg: false, \n    lightText: true,\n    lightTextDesc: true,\n    topLine: 'Dnd Twitch!',\n    headline: 'Watch Game Streams!',\n    description: 'Checkout Twitch Streams here!',\n    buttonLabel: 'Get Started',\n    dark: true,\n    primary: true,\n    darktext: false\n}","import React, {useState} from 'react';\n\nimport BannerSection from '../components/BannerSection';\nimport InfoSection from '../components/InfoSection';\nimport { homeObjOne } from '../components/InfoSection/Data';\nimport TwitchSection from '../components/TwitchWidget';\nimport { homeObjTwo } from '../components/TwitchWidget/Data';\n\n\nconst Home = () => {\n\n\n    return (\n        <>\n        \n            <BannerSection />\n            <InfoSection {...homeObjOne}/>\n            <TwitchSection {...homeObjTwo}/>\n        </>\n    )\n}\n\nexport default Home;\n","import React, { Component } from 'react'\nimport './container.css'\n\nclass container extends Component {\n    render() {\n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}\n","import {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    PASSWORD_RESET_SUCCESS,\n    PASSWORD_RESET_FAIL,\n    PASSWORD_RESET_CONFIRM_SUCCESS,\n    PASSWORD_RESET_CONFIRM_FAIL,\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    ACTIVATION_SUCCESS,\n    ACTIVATION_FAIL,\n    LOGOUT\n} from './types';\n\nimport axios from 'axios';\n\nexport const checkAuthenticated = () => async dispatch =>{\n    if(localStorage.getItem('access')){\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        };\n\n        const body = JSON.stringify({token: localStorage.getItem('access')});\n\n        try {\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config);\n\n            if(res.data.code !== 'token_not_valid'){\n                dispatch({\n                    type: AUTHENTICATED_SUCCESS\n                });\n            }//end if\n            else{\n                dispatch({\n                    type: AUTHENTICATED_FAIL\n                });\n            }//end else\n        } catch (err) {\n            dispatch({\n                type: AUTHENTICATED_FAIL\n            });\n        }//end try catch\n    }//end if \n    else {\n        //dispatch fail of authentication if no access token\n        dispatch({\n            type: AUTHENTICATED_FAIL\n        });\n    }//end else\n};\n\n\nexport const load_user = () => async dispatch => {\n    if(localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n                'Accept': 'application/json'\n            }\n        };\n\n        try{\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\n    \n            dispatch({\n                type: USER_LOADED_SUCCESS,\n                payload: res.data\n            });\n        } catch (err){\n            dispatch({\n                type: USER_LOADED_FAIL\n            });\n    \n        }//end try catch\n    }//end if\n    else{\n        dispatch({\n            type: USER_LOADED_FAIL\n        });\n    }//end else\n}\n\nexport const login = (email, password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({email, password});\n\n    try{\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        });\n\n        dispatch(load_user());\n    } catch (err){\n        dispatch({\n            type: LOGIN_FAIL\n        });\n\n    }//end try catch\n    \n    axios(config)\n    .then(function (response) {\n        console.log(JSON.stringify(response.data));\n    })\n    .catch(function (error) {\n        console.log(error);\n    });\n}\n\n\nexport const signup = (name, email, password, re_password, chat_pass) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    // const config2 = {\n    //     headers: {\n    //         'PRIVATE-KEY': '03cc7656-ea07-48bc-9108-b0714bd1a15f'\n    //     }\n    // };\n\n    const body = JSON.stringify({ name, email, password, re_password, chat_pass });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\n        // const res2 = await axios.post(`https://api.chatengine.io/users/`, body, config);\n\n        dispatch({\n            type: SIGNUP_SUCCESS,\n            payload: res.data\n        });\n    } catch (err) {\n        console.log(\"signup failed\"); \n        dispatch({\n            type: SIGNUP_FAIL\n        })\n    }\n};\n\nexport const verify = (uid, token) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ uid, token });\n\n    try {\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config);\n\n        dispatch({\n            type: ACTIVATION_SUCCESS,\n        });\n    } catch (err) {\n        dispatch({\n            type: ACTIVATION_FAIL\n        })\n    }\n};\n\nexport const reset_password = (email) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n    const body = JSON.stringify({email});\n\n    try {\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\n\n        dispatch({\n            type: PASSWORD_RESET_SUCCESS\n        });\n\n    } catch (err) {\n        dispatch({\n            type: PASSWORD_RESET_FAIL\n        });\n    }\n}\n\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\n\n    try {\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\n\n        dispatch({\n            type: PASSWORD_RESET_CONFIRM_SUCCESS\n        });\n    } catch (err) {\n        dispatch({\n            type: PASSWORD_RESET_CONFIRM_FAIL\n        });\n    }\n};\n\nexport const logout = () => dispatch =>{\n    dispatch({\n        type: LOGOUT\n    });\n};","export default __webpack_public_path__ + \"static/media/dope333.efc838ad.webp\";","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport container from '../components/container'\nimport { login } from '../actions/auth';\nimport background from '../media/images/dope333.webp';\n\n\nconst Login = ({ login, isAuthenticated }) => {\n   /**  Information required to Login\n    * @formData : State, object holding form email and password\n    * @setFormData : State modifier function \n    */\n   const [formData, setFormData] = useState({\n       email: '',\n       password: ''\n   });\n\n   //Setting email and password of formData\n   const { email, password } = formData;\n   //onChange function needed to change state from user input\n   const onChange = e => setFormData({...formData, [e.target.name]: e.target.value });\n\n   const onSubmit = e => {\n       e.preventDefault();\n       login(email, password)\n       console.log(password)\n   }\n\n\n   //if user is authenticate, redirect them to the home page\n    if(isAuthenticated) {\n        return <Redirect to='/' />\n    }\n    return (\n        <>\n          \n        \n            <div style={{ \n            backgroundImage: `url(${background})`, \n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n            backgroundRepeat: 'no-repeat',\n            width: '98.72vw',\n            height: '100vh',\n            marginTop: '-50px'       \n            }}>\n\n                <div className=\"container mt-5\">\n                    <h1>Sign In</h1>\n                    <p>Sign into your account</p>\n\n                    {/* Call onSubmit function to login on submit of form*/}\n                    <form onSubmit={e => onSubmit(e)}>\n                        {/* Email Form */}\n                        <div className='form-group'>\n                            <input\n                            className='form-control'\n                            type='email'\n                            placeholder='Email'\n                            name='email'\n                            value={email}\n                            onChange={e => onChange(e)}\n                            required\n                            />\n                            <label></label>\n                        </div>\n                        {/* Password Form */}\n                        <div className='form-group'>\n                            <input\n                                className='form-control'\n                                type='password'\n                                placeholder='Password'\n                                name='password'\n                                value={password}\n                                onChange={e => onChange(e)}\n                                minLength='6'\n                                required\n                            />\n                            <label></label>\n                        </div>\n                        <button className='btn btn-primary' type='submit'>Login</button>\n                    </form>\n                    <p className='mt-3'>\n                        Don't have an account? <Link to='/signup'>Sign Up Here.</Link>\n                    </p>\n                    <p className='mt-3'>\n                        Forgot your password? <Link to='/reset-password'>Reset Password Here.</Link>\n                    </p>\n                </div>\n            </div> \n        </>\n    )//background\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login } )(Login);\n","export default __webpack_public_path__ + \"static/media/dndshop.2158ddfe.jpg\";","export default __webpack_public_path__ + \"static/media/library.a17d0b15.jpg\";","export default __webpack_public_path__ + \"static/media/buildsbg.74a1bb41.png\";","import styled from \"styled-components\";\nimport background from \"../../media/images/dndshop.jpg\";\nimport library from '../../media/images/library.jpg';\nimport signup from '../../media/images/buildsbg.png';\n\n//classes elements\n// export const BGContainer = styled.div`\n//     background-image: url(${background});\n//     background-repeat: no-repeat;\n//     background-size: cover;\n//     justify-content: center;\n//     width: 100wh;\n//     height: 120vh;\n//     color: white;\n//     overflow: hidden;\n// `\n\nexport const ClassSectionStyle = styled.div`\n    width: 10vw;\n    height: 10vh;\n    postion: absolute;\n    color: black;\n`\nexport const ClassTitle = styled.div`\n    display: flex;\n    justify-content: center;\n    height: 90vh;\n    color: white; \n    overflow: hidden;\n    padding-top: 25px;\n`\nexport const ClassTextBox = styled.div`\n    position: absolute;\n    text-color: black;\n    background-color: #000;\n    color: #fff;\n    opacity: .5;\n    justify-content: center;\n    width: 50%;\n    margin: 0 auto;\n    height: auto;\n    max-height: 40vh;\n    margin-top: calc(90vh - 85vh - 20px);\n    border-radius: 4px;\n    padding: 20px;\n    border: 1px solid #999;\n    overflow: auto;\n`\n\nexport const ClassImageBox = styled.div`\n    position: absolute;\n    left: 150px;\n    justify-content: center;\n`\n\n\n//***************************************************************************************************************** */\n//dropown stuff below this\n\nexport const BackgroundContainer = styled.div`\n    background-image: url(${background});\n    background-position: center center;\n    background-attachment: fixed;\n    background-repeat: no-repeat;\n    background-size: cover;\n    justify-content: center center;\n    width: 100%;\n    height: 100% 100%;\n    color: white;\n`\n\nexport const DropDownStyle = styled.div`\n    width: 10vw;\n    height: 10vh;\n    postion: absolute;\n    color: black;\n    \n`\nexport const BuildTitle = styled.div`\n    display: flex;\n    background-repeat: no-repeat;\n    background-size: cover;\n    justify-content: center;\n    height: 100vh;\n    overflow: hidden;\n    padding-top: 25px;\n`\nexport const RaceTextBox = styled.div`\n    position: absolute;\n    text-color: black;\n    background-color: #000;\n    color: #fff;\n    opacity: .5;\n    justify-content: center;\n    width: 50%;\n    margin: 0 auto;\n    height: auto;\n    max-height: 70vh;\n    margin-top: calc(90vh - 85vh - 20px);\n    border-radius: 4px;\n    padding: 20px;\n    border: 1px solid #999;\n    overflow: auto;\n`\n\nexport const RaceImageBox = styled.div`\n    position: absolute;\n    left: 150px;\n    height: 100vh;\n    \n`\n//***************************************************************************************************************** */\n//stats elements\n\n//library elements\nexport const LibraryContainer = styled.div`\n    background-image: url(${library});\n    background-position: center;\n    position: absolute;\n    background-attachment: fixed;\n    background-repeat: no-repeat;\n    background-size: cover;\n    justify-content: center;\n    width: 100%;\n    height: 100% 100%;\n`\n\n\n//signup page elements\n\nexport const SignUpContainer = styled.div`\nbackground-image: url(${signup});\nbackground-position: center;\nposition: absolute;\nbackground-attachment: fixed;\nbackground-repeat: no-repeat;\nbackground-size: cover;\njustify-content: center;\nwidth: 100%;\nheight: 100%;\n`\n","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signup } from '../actions/auth';\nimport {SignUpContainer} from '../components/BuildsPage/BuildsElements'\nimport Axios from 'Axios';\nimport store from '../store';\n\nconst Signup = ({ signup, isAuthenticated }) => {\n    const [accountCreated, setAccountCreated] = useState(false);\n    var [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        password: '',\n        re_password: '',\n        chat_pass: ''\n    });\n\n    var { name, email, password, re_password, chat_pass } = formData;\n\n    const data = {\n        username: name,\n        secret: password,\n    };\n  \n    var config = {\n        method: 'post',\n        url: 'https://api.chatengine.io/users/',\n        headers: {\n            'PRIVATE-KEY': '4f66f971-b1d8-4cc8-8dd5-0983f10c4cd1'\n        },\n        data : data\n    };\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n        console.log(\"Before submit: \", name, email, password, re_password, chat_pass);\n\n        if (password === re_password) {\n            chat_pass = re_password\n            signup(name, email, password, re_password, chat_pass);\n            Axios(config)\n            .then(function (response) {\n\t            console.log(JSON.stringify(response.data));\n            })\n             .catch(function (error) {\n\t             console.log(error);\n            });\n            setAccountCreated(true);\n        }\n    };\n\n    if (isAuthenticated) {\n        return <Redirect to='/' />\n    }\n    if (accountCreated) {\n        return <Redirect to='/login' />\n    }\n\n    return (\n    <SignUpContainer>\n        <div className='container mt-5'>\n            <h1>Sign Up</h1>\n            <p>Create your Account</p>\n            <form onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='text'\n                        placeholder='Name*'\n                        name='name'\n                        value={name}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='email'\n                        placeholder='Email*'\n                        name='email'\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Password*'\n                        name='password'\n                        value={password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Confirm Password*'\n                        name='re_password'\n                        value={re_password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary' type='submit'>Register</button>\n            </form>\n            <p className='mt-3'>\n                Already have an account? <Link to='/login'>Sign In</Link>\n            </p>\n        </div>\n    </SignUpContainer>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { signup })(Signup);","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { verify } from '../actions/auth';\n\nconst Activate = ({ verify, match }) => {\n    const [verified, setVerified] = useState(false);\n\n    const verify_account = e => {\n        const uid = match.params.uid;\n        const token = match.params.token;\n\n        verify(uid, token);\n        setVerified(true);\n    };\n\n    if (verified) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className='container'>\n            <div \n                className='d-flex flex-column justify-content-center align-items-center'\n                style={{ marginTop: '200px' }}\n            >\n                <h1>Verify your Account:</h1>\n                <button\n                    onClick={verify_account}\n                    style={{ marginTop: '50px' }}\n                    type='button'\n                    className='btn btn-primary'\n                >\n                    Verify\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default connect(null, { verify })(Activate);","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { reset_password } from '../actions/auth';\n\nconst ResetPassword = ({ reset_password }) => {\n    const [requestSent, setRequestSent] = useState(false);\n    const [formData, setFormData] = useState({\n        email: ''\n    });\n\n    const { email } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        reset_password(email);\n        setRequestSent(true);\n    };\n\n    if (requestSent) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className='container mt-5'>\n            <h1>Request Password Reset:</h1>\n            <form onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='email'\n                        placeholder='Email'\n                        name='email'\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\n            </form>\n        </div>\n    );\n};\n\nexport default connect(null, { reset_password })(ResetPassword);","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { reset_password_confirm } from '../actions/auth';\n\nconst ResetPasswordConfirm = ({ match, reset_password_confirm }) => {\n    const [requestSent, setRequestSent] = useState(false);\n    const [formData, setFormData] = useState({\n        new_password: '',\n        re_new_password: ''\n    });\n\n    const { new_password, re_new_password } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        const uid = match.params.uid;\n        const token = match.params.token;\n\n        reset_password_confirm(uid, token, new_password, re_new_password);\n        setRequestSent(true);\n    };\n\n    if (requestSent) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className='container mt-5'>\n            <form onSubmit={e => onSubmit(e)}>\n            <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='New Password'\n                        name='new_password'\n                        value={new_password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Confirm New Password'\n                        name='re_new_password'\n                        value={re_new_password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\n            </form>\n        </div>\n    );\n};\n\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);","export default __webpack_public_path__ + \"static/media/Logo.c6825dcb.png\";","import { FaBars } from 'react-icons/fa';\nimport { NavLink as Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Nav = styled.nav`\n  background: #000;\n  height: 80px;\n  display: flex;\n  justify-content: space-between;\n  padding: 0.5rem calc((100vw - 1000px) / 2);\n  z-index: 10;\n`;\n\nexport const NavLink = styled(Link)`\n  color: #fff;\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  padding: 0 1rem;\n  height: 100%;\n  cursor: pointer;\n  &:hover {\n    color: #452487;\n  }\n  &.active {\n    color: #6f44c7;\n  }\n`;\n\nexport const Bars = styled(FaBars)`\n  display: none;\n  color: #fff;\n  @media screen and (max-width: 768px) {\n    display: block;\n    position: absolute;\n    top: 0;\n    right: 0;\n    transform: translate(-100%, 75%);\n    font-size: 1.8rem;\n    cursor: pointer;\n  }\n`;\n\nexport const NavMenu = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: -24px;\n  margin-right: 24px;\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NavBtn = styled.nav`\n  display: flex;\n  align-items: center;\n  margin-right: 24px;\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NavBtnLink = styled(Link)`\n  border-radius: 4px;\n  background: #452487;\n  padding: 10px 22px;\n  color: #fff;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  text-decoration: none;\n  margin-left: 24px;\n  &:hover {\n    transition: all 0.2s ease-in-out;\n    background: #6f44c7;\n    color: #fff;\n  }\n`;","import React, {Fragment} from 'react';\nimport Logo from '../../media/Logo.png';\nimport {\n  Nav,\n  NavLink,\n  Bars,\n  NavMenu,\n  NavBtn,\n  NavBtnLink\n} from './NavbarElements';\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions/auth';\n\nconst Navbar = ({toggle, logout, isAuthenticated, load_user}) => {\n    //Links when user is not autheticated (Login and Signup)\n    const guestLinks = () => (\n        <Fragment>\n          <NavBtn>\n            <NavBtnLink to='/login'>Login</NavBtnLink>\n            <NavBtnLink to='/signup'>Sign Up</NavBtnLink>\n          </NavBtn>\n        </Fragment>\n    );\n\n    //Link for when user is Authenticated (Logout)\n    const authLinks = () => (\n        <Fragment>\n            <NavMenu>\n            <NavLink to='/builds'>\n              Create Build\n            </NavLink>\n            <NavLink to='/library'>\n              Build Library\n            </NavLink>\n            <NavLink to='/chat'>\n              Chat\n            </NavLink>\n          </NavMenu>\n          <NavBtn>\n            <a onClick={logout}>Logout</a>\n          </NavBtn>\n      </Fragment>\n    );\n\n    return (\n      <>\n        <Nav>\n          <NavLink to='/'>\n            <img src={Logo} alt=\"Logo\" style={{height: '100px'}}/>\n          </NavLink>\n          <Bars onClick={toggle}/>\n        { \n            //if authenticated, show logout, else show login and signup links\n            isAuthenticated ? authLinks() : guestLinks() \n        }\n        </Nav>\n      </>\n    );\n  };\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\nexport default connect(mapStateToProps, {logout})(Navbar);\n","import styled from 'styled-components'\nimport {FaTimes} from 'react-icons/fa'\nimport { Link as LinkS } from 'react-scroll'\nimport{ Link as LinkR} from 'react-router-dom'\n\nexport const SidebarContainer = styled.aside`\n    position: fixed;\n    z-index: 999;\n    width: 100%;\n    height: 100%;\n    background: #0d0d0d;\n    display: grid;\n    align-items: center;\n    top: 0;\n    left: 0;\n    transition: 0.3s ease-in-out;\n    opacity: ${({isOpen}) => (isOpen ? '100%' : '0')};\n    top: ${({ isOpen }) => (isOpen ? '0' : '-100%')}; \n`\n\nexport const CloseIcon = styled(FaTimes)`\n    color: #fff;\n`\nexport const Icon = styled.div`\n    position: absolute;\n    top: 1.2rem;\n    right: 1.5rem;\n    background: transparent;\n    font-size: 2rem;\n    cursor: pointer;\n    outline: none;\n`\nexport const SidebarWrapper = styled.div`\n    color: #fff;\n`\n\nexport const SidebarLink = styled(LinkR, LinkS)`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 1.5rem;\n    text-decoration: none;\n    list-style: none;\n    transition: 0.2s ease-in-out;\n    text-decoration: none;\n    color: #fff;\n    cursor: pointer;\n\n    &:hover{\n        color: #452487;\n        transition: 0.2s ease-in-out;\n    }\n`\n\nexport const SideBtnWrap = styled.div`\n    display: flex;\n    justify-content: center;\n`\n\nexport const SidebarRoute = styled(LinkR)`\n    border-radius: 50px;\n    background: #452487;\n    white-space: nowrap;\n    padding: 16px 64px;\n    color: #010606;\n    font-size: 16px;\n    outline: none;\n    border: none;\n    cursor: pointer;\n    transition: all 0.2s ease-in-out;\n    text-decoration: none;\n\n    &:hover{\n        transition: all 0.2s ease-in-out;\n        background: #fff;\n        color: #10606;\n    }\n`\n\nexport const SidebarMenu = styled.ul`\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: repeat(6, 85px);\n    text-align: center;\n\n    @media screen and (max-width: 480px){\n        grid-template-rows: repeat(6, 60px);\n    }\n`","import React from 'react';\nimport { \n    SidebarContainer, \n    Icon, \n    CloseIcon, \n    SidebarMenu, \n    SidebarWrapper, \n    SidebarLink, \n    SideBtnWrap, \n    SidebarRoute \n} from './SidebarElements';\n\nconst Sidebar = ({isOpen, toggle}) => {\n    return (\n        <SidebarContainer isOpen={isOpen} onClick={toggle}>\n            <Icon onClick={toggle}>\n                <CloseIcon />\n            </Icon>\n            <SidebarWrapper>\n                <SidebarMenu>\n                    <SidebarLink to='/builds' onClick={toggle}>\n                       Create Build \n                    </SidebarLink>\n                    <SidebarLink to='/library' onClick={toggle}>\n                       Build Library \n                    </SidebarLink>\n                    <SidebarLink to='/chat' onClick={toggle}>\n                       Chat \n                    </SidebarLink>\n                </SidebarMenu>\n                <SideBtnWrap>\n                    <SidebarRoute to=\"/login\">Login</SidebarRoute>\n                </SideBtnWrap>\n            </SidebarWrapper>\n        </SidebarContainer>\n    );\n};\n\nexport default Sidebar;","import styled from \"styled-components\";\nimport {Link} from 'react-router-dom';\n\nexport const FooterContainer = styled.footer`\n    background-color: #101522;\n`\n\nexport const FooterWrap = styled.div`\n    padding: 48px 24px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    max-width: 1100px;\n    margin: 0 auto;\n`\n\nexport const FooterLinksContainer = styled.div`\n    display: flex;\n    justify-content: center;\n\n    @media screen and (max-width: 820px){\n        padding-top: 32px;\n    }\n` \n\nexport const FooterLinksWrapper = styled.div`\n    display: flex;\n\n    @media screen and (max-width: 820px){\n        flex-direction: column;\n    }\n`\n\nexport const FooterLinkItems = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    margins: 16px;\n    text-align: left;\n    width: 160px;\n    box-sizing: border-box;\n    color: #fff;\n\n    @media screen and (max-width: 420px){\n        margin: 0;\n        padding: 10px;\n        width: 100%;\n    }\n`\n\nexport const FooterLinkTitle = styled.h1`\n    font-size: 14px;\n    margin-bottom: 16px;\n`\n\nexport const FooterLink = styled(Link)`\n    color: #fff;\n    text-decoration: none;\n    margin-bottom: 0.5 rem;\n    font-size: 14px;\n\n    &:hover {\n        color: #01bf71;\n        transition: 0.3s ease-out;\n    }\n`\nexport const SocialMedia = styled.section`\n    max-width: 1000px;\n    width: 100%;\n`\n\nexport const SocialMediaWrap = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    max-width: 1100px;\n    margin: 40px auto 0 auto;\n    \n    @media screen and (max-width: 820px){\n        flex-direction: column;\n    }\n`\nexport const SocialIcons = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 240px;\n`\n\nexport const SocialIconLink = styled.a`\n    color: #fff;\n    font-size: 24px;\n`","import React, {Fragment} from 'react'\nimport { FaInstagram, FaTwitch, FaTwitter } from 'react-icons/fa';\nimport Logo from '../../media/Logo.png';\nimport {\n    FooterContainer,\n    FooterWrap,\n    FooterLinksContainer,\n    FooterLinksWrapper,\n    FooterLinkItems,\n    FooterLinkTitle,\n    FooterLink,\n    SocialIconLink,\n    SocialMedia,\n    SocialMediaWrap,\n    SocialIcons,\n} from './FooterElements'\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions/auth';\n\nconst Footer = ({logout, isAuthenticated}) => {\n\n    const guestLinks = () => (\n        <Fragment>\n            <FooterLink to=\"/login\">Login</FooterLink>\n            <FooterLink to=\"/signup\">Sign up</FooterLink>\n        </Fragment> \n    )\n\n    const authLinks = () => (\n        <Fragment>\n            <a onClick={logout}>Logout</a>\n        </Fragment> \n        )\n    return (\n        <FooterContainer>\n            <FooterWrap>\n                <FooterLinksContainer>\n                    <FooterLinksWrapper>\n                    <img src={Logo} alt=\"Logo\" style={{height: '100px'}}/>\n                        <FooterLinkItems>\n                            <FooterLinkTitle>Quick Links</FooterLinkTitle>\n                            {\n                            isAuthenticated ? authLinks() : guestLinks() \n                             }\n                            <FooterLink to=\"/builds\">Create Build</FooterLink>\n                            <FooterLink to=\"/library\">Builds Library</FooterLink>\n                            <FooterLink to=\"/chat\">Chat</FooterLink>\n                        </FooterLinkItems>\n                        <FooterLinkItems>\n                            <FooterLinkTitle>Support</FooterLinkTitle>\n                            <FooterLink to=\"/\">Contact Us</FooterLink>\n                            <FooterLink to=\"/\">FAQ</FooterLink>\n                        </FooterLinkItems>\n                        <FooterLinkItems>\n                            <FooterLinkTitle>Social Media</FooterLinkTitle>\n                                <SocialIcons>\n                                <SocialIconLink href=\"/\" target=\"_blank\" aria-label=\"Instagram\"><FaInstagram/></SocialIconLink>\n                                <SocialIconLink href=\"//twitter.com/DnDBeyond\" aria-label=\"Twitter\"><FaTwitter/></SocialIconLink>\n                                <SocialIconLink href=\"/\"><FaTwitch/></SocialIconLink>\n                                </SocialIcons>\n                        </FooterLinkItems>\n                    </FooterLinksWrapper>\n                </FooterLinksContainer>\n            </FooterWrap>\n        </FooterContainer>\n    )\n}\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\nexport default connect(mapStateToProps, {logout})(Footer);\n","import React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport { checkAuthenticated, load_user} from '../actions/auth';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n// import Home from '../containers/Home';\n// import Login from '../containers/Login';\n// import Dice from '../containers/Dice';\n// import Library from '../containers/Library';\n// import Builds from '../containers/Builds';\n// import Signup from '../containers/Signup';\n// import Chat from '../containers/Chat';\nimport Navbar from '../components/Navbar';\nimport Sidebar from '../components/Sidebar';\nimport Footer from '../components/Footer';\n\nconst Layout = (props) =>{\n    useEffect(() => {\n        props.checkAuthenticated();\n        props.load_user();\n        // console.log(\"Props from Layout.js\", props);\n    }, []);\n\n    const [isOpen, setIsOpen] = useState(false)\n\n    const toggle = () => {\n        setIsOpen(!isOpen)\n    }\n    \n    return (\n        // <Router>\n        //     <Switch>\n        //             {/* Home Route */}\n        //             <Route exact path='/' component={Home} /> \n        //             {/* Log-in Route */}\n        //             <Route exact path='/login' component={Login} />\n        //             {/* Dice Route */}\n        //             <Route exact path='/dice' component={Dice} />\n        //             {/* Builds Route */}\n        //             <Route exact path='/builds' component={Builds} />\n        //              {/* Libary Route */}\n        //             <Route exact path='/library' component={Library} />\n\n        //             <Route exact path='/signup' component={Signup} />\n\n        //             <Route exact path='/chat' component={Chat} />\n\n        //     </Switch>\n        // </Router>\n        <div>\n            <Sidebar isOpen={isOpen} toggle={toggle}/>\n            <Navbar toggle={toggle} load_user={load_user}/>\n            {props.children}\n            <Footer />\n        </div>\n    )\n}\nexport default connect(null, { checkAuthenticated, load_user })(Layout);\n","export default __webpack_public_path__ + \"static/media/dragonborn.b21ab004.png\";","export default __webpack_public_path__ + \"static/media/half-elf.b25f2b98.png\";","export default __webpack_public_path__ + \"static/media/dwarf.543487f6.png\";","export default __webpack_public_path__ + \"static/media/elf.6519d127.png\";","export default __webpack_public_path__ + \"static/media/gnome.de2d8fc7.png\";","export default __webpack_public_path__ + \"static/media/half-orc.e7a24a50.png\";","export default __webpack_public_path__ + \"static/media/halfling.c8e1bbf6.png\";","export default __webpack_public_path__ + \"static/media/tiefling.7a53df0d.png\";","import dragonborn from './dragonborn.png'\nimport halfelf from './half-elf.png'\nimport dwarf from './dwarf.png'\nimport elf from './elf.png'\nimport gnome from './gnome.png'\nimport halforc from './half-orc.png'\nimport halfling from './halfling.png'\nimport tiefling from './tiefling.png'\nimport human from './human.png'\n\nconst imgMap = \n{\n    'dragonborn':dragonborn,\n    'half-elf':halfelf,\n    'dwarf':dwarf,\n    'human':human,\n    'tiefling':tiefling,\n    'halfling':halfling,\n    'half-orc':halforc,\n    'gnome':gnome,\n    'elf':elf\n};\nexport default imgMap;","export default __webpack_public_path__ + \"static/media/human.d8d48a0c.png\";","import * as React from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport imgMap from '../../media/raceImages/index';\nimport { makeStyles } from '@mui/styles';\nimport { buttonBaseClasses } from '@mui/material';\nimport Axios from 'axios';\nconst useStyles = makeStyles({ //this dont work ?? idk\n    media: {\n      background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n      color: 'white',\n      padding: '0 30px',\n      paddingTop: '56.25%', // 16:9,\n      marginTop:'30',\n      objectPosition: \"left top\"\n\n    },\n});\n\n\n\nconst onDelete = ({Name}) =>{\n\n    const getData = Axios.get(`${process.env.REACT_APP_API_URL}/heroes`)\n    console.log(getData)\n    // Axios.delete(getData[name])\n   \n\n    \n    \n    \n\n};\n\nconst MediaCard = ({build}) => {\n    const classes = useStyles;\n    return (\n        <Card sx={{ maxWidth: 345}} style={{backgroundColor: \"black\",color:\"white\"}}>\n            <CardMedia\n                // className={classes.media}\n                component=\"img\"\n                marginTop='50%'\n                height=\"400\"\n                image={imgMap[build.race_type]}\n                alt=\"character image\"\n            />\n         <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"div\">\n                {build.name}\n                </Typography>\n                <Typography gutterBottom variant=\"h6\" component=\"div\">\n                Race: {build.race_type}\n                </Typography>\n                <Typography gutterBottom variant=\"h6\" component=\"div\">\n                Class: {build.class_type}\n                </Typography>\n\n                <Typography variant=\"body2\" color=\"white\">\n                    <ul>\n                        <li>STR: {build.STR}</li>\n                        <li>DEX: {build.DEX}</li>\n                        <li>CON: {build.CON}</li>\n                        <li>INT: {build.INT}</li>\n                        <li>WIS: {build.WIS}</li>\n                        <li>CHA: {build.CHA}</li>\n                    </ul>\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <Button size=\"small\">Share</Button>\n                <Button size=\"small\">Learn More</Button>\n                <Button \n                    // variant=\"contained\" \n                     onClick={()=>onDelete(build.name)}\n                                // style={{backgroundColor: '#12824C', color: '#FFFFFF'}}\n                    >\n                    Delete\n                    </Button>\n            </CardActions>\n        </Card>\n    );\n}\n\nexport default MediaCard;","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { StyledEngineProvider,styled } from '@mui/material/styles';\nimport MediaCard from '../components/BuildLibPage';\nimport { Container, Grid,Paper } from '@mui/material';\nimport { Box } from '@mui/system';\nimport Axios from 'axios'; \nimport { RaceImageBox } from '../components/BuildsPage/BuildsElements';\nimport { LibraryContainer } from '../components/BuildsPage/BuildsElements';\n\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }));\n\n\nconst Library = () => {\n\n    const [allBuilds, setAllBuilds] = useState([]);\n\n    const getBuilds = async () => {\n        await Axios.get(`${process.env.REACT_APP_API_URL}/heroes/`)\n        .then((res) => {\n            console.log(\"Here is the stuff\", res.data);\n            setAllBuilds(res.data);\n        })\n        .catch((err) => {\n            console.error( err );\n        });\n    \n    }\n    \n    useEffect(() => {\n        getBuilds();\n    }, [])\n\n    console.log(\"Options after map: \", allBuilds);\n    return (\n        <>\n        <LibraryContainer>\n            <Container>\n                <Box sx={{ flexGrow: 1,marginTop:10 }}>\n                    <Grid container spacing={3} alignItems=\"stretch\">\n                        {allBuilds.map((build) => (\n                            <Grid item xs={12} sm={4}>\n                                <MediaCard build={build}/>\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Box>\n            </Container>\n        </LibraryContainer>\n        </>\n    )\n}\n\nexport default Library;","export default __webpack_public_path__ + \"static/media/barbarian.b93c0f4f.png\";","export default __webpack_public_path__ + \"static/media/bard.4c407ba5.png\";","export default __webpack_public_path__ + \"static/media/druid.dc251978.png\";","import barbarian from './barbarian.png'\nimport bard from './bard.png'\nimport druid from './druid.png'\nimport cleric from './cleric.png'\nimport fighter from './fighter.png'\nimport monk from './monk.png'\nimport paladin from './paladin.png'\nimport ranger from './ranger.png'\nimport rogue from './rogue.png'\nimport sorcerer from './sorcerer.png'\nimport warlock from './warlock.png'\nimport wizard from './wizard.png'\n\n\nconst ClassImgMap =\n{\n    'barbarian': barbarian,\n    'bard': bard,\n    'cleric': cleric,\n    'druid': druid,\n    'fighter': fighter,\n    'monk': monk,\n    'paladin': paladin,\n    'ranger': ranger,\n    'rogue': rogue,\n    'sorcerer': sorcerer,\n    'warlock': warlock,\n    'wizard': wizard\n};\n\nexport default ClassImgMap;","export default __webpack_public_path__ + \"static/media/cleric.0fde65d2.png\";","export default __webpack_public_path__ + \"static/media/fighter.f5739b62.png\";","export default __webpack_public_path__ + \"static/media/monk.04333d02.png\";","export default __webpack_public_path__ + \"static/media/paladin.ab54010e.png\";","export default __webpack_public_path__ + \"static/media/ranger.89a74fcd.png\";","export default __webpack_public_path__ + \"static/media/rogue.84e06165.png\";","export default __webpack_public_path__ + \"static/media/sorcerer.417a5a5f.png\";","export default __webpack_public_path__ + \"static/media/warlock.9b7ce209.png\";","export default __webpack_public_path__ + \"static/media/wizard.69d462b4.png\";","import styled from \"styled-components\";\n\nexport const IncContainer = styled.div`\n    display: flex;\n    flex: 1;\n    justify-content: center;\n    font-family: 'Helvetica';\n    width: 30px;\n`\n\nexport const IncButton = styled.button`\n    cursor: pointer;\n    align-items: center;\n    display: flex;\n    height: 100%;\n    background-color: transparent;\n    border: 0;\n    margin: 0;\n    padding: 0;\n    height: 40px;\n    font-size: 3rem;\n`\n\nexport const IncValue = styled.div`\n    margin-top: 7px;\n    margin-right: 10px;\n    padding: 4px 8px;\n    min-width: 2rem;\n    text-align: center;\n    font-size: 1.5rem;\n    line-height: 1rem;\n    height: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-family: 'Helvetica'\n`\n\n\n","import React, { useState } from 'react';\nimport { faMinusSquare, faPlusSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { clamp } from './clamp';\nimport {\n    IncContainer,\n    IncButton,\n    IncValue\n}\nfrom './IncElements';\n\n// - <value> +\nconst Incrementor = ({min, max, value, onChange,Counter, availPoints,CurrentPoints, Mod}) => {\n    const clampV = clamp(min, max);\n    const disableMin = value === min;\n    const disableMax = value === max;\n   \n    return (\n        <IncContainer>\n            <IncButton onClick={() => \n                onChange(clampV(value - 1), (Counter-1), (availPoints+1), (CurrentPoints-1), (Mod-1))\n\n            } \n                disabled={disableMin}\n                >\n                <FontAwesomeIcon icon={faMinusSquare} style={{ width: '60%' }}/>\n            </IncButton>\n                <IncValue>{value}</IncValue>\n                \n            <IncButton onClick={ () => onChange(clampV(value + 1),(Counter+1), (availPoints-1), (CurrentPoints+1), (Mod+1))} disabled={CurrentPoints === 27 ||availPoints ===0 || disableMax}>\n                <FontAwesomeIcon icon={faPlusSquare} style={{ width: '60%', margin: '0'}}/>\n            </IncButton>\n        </IncContainer>\n    );\n}\n\nexport default Incrementor;","\n\nexport const clamp = (min, max) => (v) => v <= min ? min : v >= max ? max : v; ","import React from 'react';\nimport imgMap from \"../../media/raceImages\";\nimport { \n    BuildTitle,\n    DropDownStyle, \n    RaceTextBox, \n    RaceImageBox\n } from './BuildsElements';\nimport { Container, Grid,Paper } from '@mui/material';\nimport { Box, grid } from '@mui/system';\nimport PropTypes from \"prop-types\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Typography from \"@mui/material/Typography\";\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box sx={{ p: 3 }}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n  \n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n  };\n  \n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      \"aria-controls\": `simple-tabpanel-${index}`\n    };\n  }\n\n    \n    \n\n\nconst RaceSelect = ({selectedRace, handleChange, race, raceOptions}) => {\nconst [value, setValue] = React.useState(0);\n\nconst tabChange = (event, newValue) => {\n      setValue(newValue);\n};\n\n\n    return (\n        <BuildTitle style>\n            <Container>\n                <Box sx={{ flexGrow: 1,marginTop:10 }}>\n                    <Grid container spacing = {10} alignItems=\"stretch\">\n                    <Grid item xs={5} columns={18}> \n\n                    </Grid>\n                    <Grid item xs={2}>\n                    <h1>\n                    {\n                        selectedRace != 'none'?\n                        <RaceImageBox>\n                        <img src={imgMap[race.index]}></img> \n                        </RaceImageBox>\n                        : null\n                    }   \n                    </h1>\n                    </Grid>\n\n                    \n                    <DropDownStyle>\n                        <Grid item xs={6} alignItems=\"stretch\">\n                        <br /><br />\n                        <a style={{ color: 'white' }}>Race</a>\n\n                        <select value={selectedRace} onChange={handleChange}>\n                            <option value = 'none'> Select a race </option>\n                            {raceOptions.map((race) => {\n                                return(\n                                    <option value={race.value}>\n                                        {race.label}\n                                    </option>\n                                )\n                            })}\n                        </select>\n\n                    \n                        \n                        <br /><br />\n                        {\n                            //if selectedValue is not none, show all attributes\n                            \n                            selectedRace !== 'none' ?  \n                            <RaceTextBox>\n                                <Box sx={{ maxWidth: 480 }}>\n                                    <Tabs\n                                        value={value}\n                                        onChange={tabChange}\n                                        variant=\"scrollable\"\n                                        scrollButtons\n                                        allowScrollButtonsMobile\n                                        aria-label=\"scrollable auto tabs example\"\n                                    >\n                                        \n                                        <Tab label=\"Alignment\" {...a11yProps(0)}/> \n                                        <Tab label=\"Age\" {...a11yProps(1)} />\n                                        <Tab label=\"Size\" {...a11yProps(2)} />\n                                        <Tab label=\"Size Description\" {...a11yProps(3)} />\n                                        <Tab label=\"Speed\" {...a11yProps(4)} />\n                                        <Tab label=\"Languages\" {...a11yProps(5)} />\n                                    </Tabs>\n\n                                    <TabPanel value={value} index={0}>\n                                    {race.alignment}\n                                    </TabPanel>\n                                    <TabPanel value={value} index={1}>\n                                    {race.age}\n                                    </TabPanel>\n                                    <TabPanel value={value} index={2}>\n                                    {race.size}\n                                    </TabPanel>\n                                    <TabPanel value={value} index={3}>\n                                    {race.size_description}\n                                    </TabPanel>\n                                    <TabPanel value={value} index={4}>\n                                    {race.speed}\n                                    </TabPanel>\n                                    <TabPanel value={value} index={5}>\n                                    {race.language_desc}\n                                    </TabPanel>\n                                    </Box>\n                                \n                            </RaceTextBox>\n                            //else render nothing  \n                            : null\n                        }\n                        </Grid>\n                    </DropDownStyle>\n                    </Grid>\n                </Box>\n            </Container>\n        </BuildTitle>\n    )\n}\n\nexport default RaceSelect;\n","import React from 'react';\nimport { Container, Grid } from '@mui/material';\nimport { Box} from '@mui/system';\nimport ClassImageMap from \"../../media/classImages\";\nimport { \n    ClassTitle, \n    ClassSectionStyle, \n    ClassTextBox, \n    ClassImageBox,\n    \n} from './BuildsElements';\nimport PropTypes from \"prop-types\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Typography from \"@mui/material/Typography\";\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box sx={{ p: 3 }}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n  \n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired\n  };\n  \n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      \"aria-controls\": `simple-tabpanel-${index}`\n    };\n  }\n\n\nconst ClassSelect = ({selectedClass, classes, classOptions, handleChange2}) => {\n    const [value, setValue] = React.useState(0);\n    const tabChange = (event, newValue) => {\n        setValue(newValue);\n  };\n    return (\n        <ClassTitle>\n            <Container>\n                <Box sx={{ flexGrow: 1,marginTop:10 }}>\n                <Grid container spacing = {4}>\n                <Grid item xs={6} columns={18}>\n                </Grid>\n                <Grid  item xs={1}>\n                <h1>\n                {\n                    selectedClass !== 'none' ?\n                    <ClassImageBox>\n                    <img src={ClassImageMap[classes.index]}></img> \n                    </ClassImageBox>\n                    : null\n                }\n            </h1>\n            </Grid>\n            \n            <ClassSectionStyle>\n                <Grid Grid item xs={6} alignItems=\"stretch\">\n                <br /><br />\n                <a style={{ color: 'white' }}>Class</a>\n\n                <select value={selectedClass} onChange={handleChange2}>\n                    <option value = 'none'> Select a class </option>\n                    {classOptions.map((classes) => {\n                        return(\n                            <option value = {classes.value}>\n                                {classes.label}\n                            </option>\n                        )\n                    })}\n                </select>\n                \n                \n                <br /><br />\n                {\n                    //if selectedValue is not none, show all attributes\n                    selectedClass !== 'none' ?  \n                    <ClassTextBox>\n                        <Box sx={{ maxWidth: 500 }}>\n                                    <Tabs\n                                        value={value}\n                                        onChange={tabChange}\n                                        variant=\"scrollable\"\n                                        scrollButtons\n                                        allowScrollButtonsMobile\n                                        aria-label=\"scrollable auto tabs example\"\n                                        font =\"font-family: Arial\"\n                                    >\n                                        <Tab label=\"Class Description\" {...a11yProps(0)} />\n                                        <Tab label=\"Stat Bonuses\" {...a11yProps(1)} />\n                                        <Tab label=\"Hit Die\" {...a11yProps(2)} />\n                                        <Tab label=\"Proficiences\" {...a11yProps(3)} />\n                                        <Tab label=\"Equipment Proficiencies\" {...a11yProps(4)} />\n                                    </Tabs>\n\n                                    <TabPanel value={value} index={0}>\n                                    Item\n                                    </TabPanel>\n                                    <TabPanel value={value} index={1}>\n                                    <div id=\"statBonus\"> </div>\n                                    {/* {classes.bonus} */}\n                                    </TabPanel>\n                                    <TabPanel value={value} index={2}>\n                                    {classes.hit_die}\n                                    </TabPanel>\n                                    <TabPanel value={value} index={3}>\n                                    <div id=\"profChoices\"></div>\n                                    </TabPanel>\n                                    <TabPanel value={value} index={4}>\n                                    <div id=\"equipChoices\"></div>\n                                    </TabPanel>\n                                    </Box>\n                    </ClassTextBox>\n                    //else render nothing  \n                    : null\n                }\n                </Grid>\n                </ClassSectionStyle>\n                </Grid>\n                </Box>\n            </Container>\n        </ClassTitle>\n    )\n}\n\nexport default ClassSelect;\n","import styled from \"styled-components\";\n\nexport const PopUpBox = styled.div`\n    position: fixed;\n    background: #00000050;\n    width: 100%;\n    height: 100vh;\n    top: 0;\n    left: 0;\n`\n   \nexport const Box = styled.div`\n    position: relative;\n    width: 70%;\n    margin: 0 auto;\n    height: auto;\n    max-height: 70vh;\n    margin-top: calc(100vh - 85vh - 20px);\n    background: #fff;\n    border-radius: 4px;\n    padding: 20px;\n    border: 1px solid #999;\n    overflow: auto;\n`\nexport const CloseIcon = styled.div`\n    position: fixed;\n    right: calc(15% - 30px);\n    top: calc(100vh - 85vh - 33px);\n    background: clear;\n    width: 25px;\n    height: 25px;\n    border-radius: 50%;\n    line-height: 20px;\n    text-align: center;\n    border: 1px solid clear;\n    font-size: 20px;\n`\nexport const Cursor = styled.div`\n    cursor: grab;\n`","import React from 'react'\nimport {PopUpBox,Box,CloseIcon} from './PopUpElements'\n\n\nconst PopUp = (props) => {\n    return(props.trigger) ? (\n        <PopUpBox>\n            <Box>\n                <CloseIcon>\n                <button onClick = {() => props.setTrigger(false)}>Close</button>\n                </CloseIcon>\n                {props.children}\n            </Box>\n        </PopUpBox>\n    ): \"\";\n};\n\nexport default PopUp;","import React, {useState} from 'react';\nimport PopUp from '../PopUp/index';\nimport Incrementor from '../Incrementor/Inc';\nimport {Cursor} from '../PopUp/PopUpElements';\n\nconst StatCalc = ({\n    usedPoints, \n    availablePoints, \n    totalPoints, \n    trackUsedPoints, \n    trackAvailablePoints, \n    min, max, valueStr, valueDex, valueCon, \n    valueInt, valueWis, valueCha, StrCount, setStrValue, \n    setStrCounter, DexCount, setDexValue, setDexCounter, ConCount, \n    setConValue, setConCounter, IntCount, setIntValue, setIntCounter, \n    WisCount, setWisValue, setWisCounter, ChaCount, setChaValue, setChaCounter,\n    StrModCount, setStrModCounter,\n    DexModCount, setDexModCounter,\n    ConModCount, setConModCounter,\n    IntModCount, setIntModCounter,\n    WisModCount, setWisModCounter,\n    ChaModCount, setChaModCounter,\n}) => {\nconst [buttonPopup, setButtonPopup] = useState(false);\nconst [buttonPopup2, setButtonPopup2] = useState(false);\nconst [buttonPopup3, setButtonPopup3] = useState(false);\nconst [buttonPopup4, setButtonPopup4] = useState(false);\nconst [buttonPopup5, setButtonPopup5] = useState(false);\nconst [buttonPopup6, setButtonPopup6] = useState(false);\n\n    return (\n        <div>\n            <h1 style={{textAlign: \"center\"}}>Point-Buy Calculator</h1>\n            <body id=\"stats-body\">\n                <table id = \"point-buy\" style={{width: \"100%\"}}>\n                    <tbody>\n                        <tr class = \"stats-header\">\n                            <th></th>\n                            <th>Base</th>\n                            <th class=\"operator\"></th>\n                            <th></th>\n                            <th class=\"operator\"></th>\n                            <th>Finalscore</th>\n                            <th></th>\n                            <th>Mod</th>\n                            <th></th>\n                            <th>Cost</th>\n                        </tr>\n                        <tr id=\"str\" class=\"stats-row\">\n                            \n                            <th button onClick={() => setButtonPopup(true)}><Cursor>STR</Cursor></th>\n                            \n                            <PopUp trigger ={buttonPopup} setTrigger = {setButtonPopup}>\n                                <h1>Strength</h1>\n\n                                <p>Strength measures bodily power, athletic training, \n                                and the extent to which you can exert raw physical force.</p>\n\n                                <h1>Strength Checks</h1>\n\n                                <p>A Strength check can model any attempt to lift, push, pull, or break something, to force your body through a space, or to otherwise apply brute force to a situation. \n                                The Athletics skill reflects aptitude in certain kinds of Strength checks.</p>\n\n                                <h1>Athletics</h1>\n\n                                <p>Your Strength (Athletics) check covers difficult situations you encounter \n                                while climbing, jumping, or swimming. Examples include the following activities: </p>\n                                \n                                <ul>\n                                <li> You attempt to climb a sheer or slippery cliff, avoid hazards while scaling a wall, \n                                or cling to a surface while something is trying to knock you off.</li>\n\n                                <li>You try to jump an unusually long distance or pull off a stunt midjump.</li>\n\n                                <li>You struggle to swim or stay afloat in treacherous currents, storm-tossed waves, or areas of thick seaweed. Or another creature tries to push \n                                or pull you underwater or otherwise interfere with your swimming.</li>\n                                </ul>\n                            </PopUp>\n                            \n                            <td className=\"Holder\">\n                                <div className=\"Right\">\n                                    <Incrementor\n                                    value = {valueStr}\n                                    Counter = {StrCount}\n                                    Mod = {StrModCount}\n                                    availPoints = {availablePoints}\n                                    CurrentPoints = {usedPoints} \n                                    onChange = {\n                                        (v,count, points, trackpoints,modpoints) => {\n\n                                            \n                                            if(usedPoints >=0 && usedPoints<=27){\n                                                setStrValue(v);\n                                                setStrCounter(count);\n                                                trackUsedPoints(trackpoints);\n                                                trackAvailablePoints(points);\n                                                // if ((StrCount % 2 ===0 && StrCount>0) || (usedPoints === 27|| availablePoints ===0)){\n                                                //     setStrModCounter(modpoints);\n                                                //     // if(StrCount <=15 && StrCount%2 ===0 ){\n                                                //     //     setStrModCounter(modpoints);\n    \n                                                //     // }  \n                                                    \n    \n                                                // }\n                                            }\n                                            if ((availablePoints% 2 ===1  && valueStr >8 && valueStr<15) && availablePoints<27){\n                                                    setStrModCounter(modpoints);\n                                                    // if(StrCount <=15 && StrCount%2 ===0 ){\n                                                    //     setStrModCounter(modpoints);\n    \n                                                    // }  \n                                                    \n    \n                                            }\n                                            \n\n                                            \n                                        \n\n                                            // if(availablePoints<0){\n                                            //     alert(\"All 27 points used\")\n                                            //     trackAvailablePoints(points+1)\n                                            // }\n                                            // else{\n                                            //     trackAvailablePoints(points)\n                                            \n\n                                            // }\n                                            \n                                        }\n                                    } \n                                    min={min} \n                                    max={max} />\n\n                                </div>\n                            </td>\n                            <td class=\"race-mod\">\n                                RM\n                            </td>\n                            <td className=\"Left\">\n                                    <td className=\"Display\">{valueStr}</td>\n                            </td>\n                            <td>&nbsp;</td>\n                            <td>\n                                <div>{StrModCount}</div>\n                            </td>\n                            <td>&nbsp;</td>\n                            <td>\n                                {StrCount}\n                            </td>\n                        </tr>\n                        <tr id=\"dex\" class=\"stats-row\">\n                        \n                            <th id button onClick={() => setButtonPopup2(true)}><Cursor>DEX</Cursor></th>\n                            \n                            <PopUp trigger ={buttonPopup2} setTrigger = {setButtonPopup2}>\n                            <h1>Dexterity</h1>\n\n                            <p>Dexterity measures agility, reflexes, and balance.</p>\n\n                            <h1>Dexterity Checks</h1>\n\n                            <p>A Dexterity check can model any attempt to move nimbly, quickly, or quietly, or to keep from \n                            falling on tricky footing. The Acrobatics, Sleight of Hand, and Stealth skills reflect aptitude \n                            in certain kinds of Dexterity checks.</p>\n\n                            <h1>Acrobatics</h1>\n\n                            <p>Your Dexterity (Acrobatics) check covers your attempt to stay on your feet in a tricky situation, such as when you're trying to run across a sheet of ice, balance on a tightrope, or stay upright on a rocking ship's deck. The GM might also call for a Dexterity (Acrobatics) \n                            check to see if you can perform acrobatic stunts, including dives, rolls, somersaults, and flips. </p>\n\n                            <h1>Sleight of Hand</h1>\n\n                            <p>Whenever you attempt an act of legerdemain or manual trickery, such as planting something on someone else or concealing an object on your person, make a Dexterity (Sleight of Hand) check. The GM might also call for a Dexterity (Sleight of Hand) check to determine whether you can lift a \n                            coin purse off another person or slip something out of another person's pocket.</p>\n                            \n                            <h1>Stealth</h1>\n                            <p>Make a Dexterity (Stealth) check when you attempt to conceal yourself from enemies, slink past guards, slip away without being noticed, \n                            or sneak up on someone without being seen or heard.</p>\n                            </PopUp>\n            \n\n                            <td className=\"Holder\">\n                                <div className=\"Right\">\n                                    <Incrementor\n                                    value = {valueDex}\n                                    Counter ={DexCount}\n                                    availPoints = {availablePoints}\n                                    Mod = {DexModCount}\n                                    CurrentPoints = {usedPoints}\n                                    onChange = {\n                                        (v, count, points, trackpoints,modpoints) => {\n\n                                            if(usedPoints >=0 && usedPoints<=27){\n                                                setDexValue(v)\n                                                setDexCounter(count)\n                                                trackUsedPoints(trackpoints);\n                                                trackAvailablePoints(points);\n                                                // if ((DexCount%2===0 && DexCount >0) ||(usedPoints === 27|| availablePoints ===0)){\n                                                //     setDexModCounter(modpoints);\n                                                //     // if(DexCount% 2 ===0){\n                                                //     //     setDexModCounter(modpoints);\n    \n                                                //     // }\n                                                \n                                                // }\n                                            }\n                                            if ((availablePoints % 2 ===1  && valueDex>8 && valueDex<15) && availablePoints<27){\n                                                setDexModCounter(modpoints);\n                                                // if(DexCount% 2 ===0){\n                                                //     setDexModCounter(modpoints);\n\n                                                // }\n                                            \n                                            }\n                                    \n\n                                        // if(availablePoints<0){\n                                        //     alert(\"All 27 points used\")\n                                        //     trackAvailablePoints(points+1)\n                                        // }\n                                        // else{\n                                        //     trackAvailablePoints(points)\n                                        \n\n                                        // }\n                                        \n\n                                    \n                                    }} \n                                    min={min} \n                                    max={max}\n                                    />\n                                </div>\n                            </td>\n                            <td className=\"race-mod\">\n                                RM\n                            </td>\n                            <td className=\"Left\">\n                                    <div className=\"Display\">{valueDex}</div>\n                            </td>\n                            <td>&nbsp;</td>\n                            <td>\n                                <div>{DexModCount}</div>\n                            </td>\n                            <td>&nbsp;</td>\n                            <td>\n                                <div>\n                                    {DexCount}\n\n                                </div>\n                            </td>\n                        </tr>\n                        <tr id=\"con\" class=\"stats-row\">\n                        \n                            <th button onClick={() => setButtonPopup3(true)}><Cursor>CON</Cursor></th>\n                            \n                            <PopUp trigger ={buttonPopup3} setTrigger = {setButtonPopup3}>\n\n                            <h1>Constitution</h1>\n                            <p>Constitution measures health, stamina, and vital force.</p>\n\n                            <h1>Constitution Checks</h1>\n                            <p> Constitution checks are uncommon, and no skills apply to Constitution checks, because the endurance this ability represents is largely passive rather \n                                than involving a specific effort on the part of a character or monster. \n                                A Constitution check can model your attempt to push beyond normal limits, however.The GM might call for a Constitution check when you try to \n                                accomplish tasks like the following:\n                            </p>\n                            <ul>\n                            <li>Hold your breath</li>\n                            <li>March or labor for hours without rest</li>\n                            <li>Go without sleep</li>\n                            <li>Survive without food or water</li>\n                            <li>Quaff an entire stein of ale in one go</li>\n                            </ul>\n\n                            <h1>Hit Points</h1>\n                            <p>Your Constitution modifier contributes to your hit points. Typically, you add your Constitution modifier to each Hit Die you roll for your hit points.\n                                If your Constitution modifier changes, your hit point maximum changes as well, as though you had the new modifier from 1st level. For example, if you raise your Constitution score when you reach 4th level and your Constitution modifier increases from +1 to +2, \n                                you adjust your hit point maximum as though the modifier had always been +2. So you add 3 hit points for your first three levels, and then roll your hit points for 4th level using your new modifier. \n                                Or if you're 7th level and some effect lowers your Constitution score so as to \n                                reduce your Constitution modifier by 1, your hit point maximum is reduced by 7.\n                            </p>\n                            </PopUp>\n\n                        \n                            <td className=\"Holder\">\n                                <div className=\"Right\">\n                                    <Incrementor\n                                    value = {valueCon}\n                                    Counter = {ConCount}\n                                    availPoints = {availablePoints}\n                                    CurrentPoints = {usedPoints}\n                                    Mod = {ConModCount}\n                                    onChange = {(v,count, points, trackpoints, modpoints) => {\n                                        if(usedPoints >=0 && usedPoints<=27){\n                                            setConCounter(count)\n                                            setConValue(v)\n\n                                            trackUsedPoints(trackpoints);\n                                            trackAvailablePoints(points);\n                                            // if ((ConCount % 2 ===0 && ConCount > 0) || (usedPoints === 27|| availablePoints ===0)){\n                                            //     setConModCounter(modpoints);\n                                            //     // if(ConCount%2 ===0){\n                                            //     //     setConModCounter(modpoints);\n\n                                            //     // }\n                                                \n\n                                            \n\n                                            // }\n                                            if ((availablePoints % 2 ===1 && valueCon>8 && valueCon<15) && availablePoints<27){\n                                                setConModCounter(modpoints);\n                                                // if(ConCount%2 ===0){\n                                                //     setConModCounter(modpoints);\n    \n                                                // }\n                                                \n    \n                                            \n    \n                                            }\n                                        }\n                                        // if (usedPoints % 2 ===1 && usedPoints<27){\n                                        //     setConModCounter(modpoints);\n                                        //     // if(ConCount%2 ===0){\n                                        //     //     setConModCounter(modpoints);\n\n                                        //     // }\n                                            \n\n                                        \n\n                                        // }\n                                    \n\n                                        // if(availablePoints<0){\n                                        //     alert(\"All 27 points used\")\n                                        //     trackAvailablePoints(points+1)\n                                        // }\n                                        // else{\n                                        //     trackAvailablePoints(points)\n                                        \n\n                                        // }\n\n                                    }} \n                                    min={min} \n                                    max={max} />\n                                </div>\n                            </td>\n                            <td className=\"race-mod\">\n                                RM\n                            </td>\n                            <td className=\"Left\">\n                                    <div className=\"Display\">{valueCon}</div>\n                            </td>\n                            <td>&nbsp;</td>\n                            <td>\n                                <div>{ConModCount}</div>\n                            </td>\n                            <td>&nbsp;</td>\n                            <td>\n                                <div>{ConCount}</div>\n                            </td>\n                        </tr>\n                        <tr id=\"int\" class=\"stats-row\">\n                            <th button onClick={() => setButtonPopup4(true)}><Cursor> INT </Cursor> </th>\n                            \n                            <PopUp trigger ={buttonPopup4} setTrigger = {setButtonPopup4}>\n                                <h1>Intelligence</h1>\n                                <p>Intelligence measures mental acuity, accuracy of recall, and the ability to reason.</p>\n\n                                <h1>Intelligence Checks</h1>\n                                <p>An Intelligence check comes into play when you need to draw on logic, education, memory, or \n                                deductive reasoning. The Arcana, History, Investigation, Nature, and Religion skills reflect aptitude \n                                in certain kinds of Intelligence checks.</p>\n\n                                <h1>Arcana</h1>\n                                <p>Your Intelligence (Arcana) check measures your ability to recall lore about spells, magic items, eldritch symbols, \n                                magical traditions, the planes of existence, and the inhabitants of those planes.</p>\n\n                                <h1>History</h1>\n                                <p>Your Intelligence (History) check measures your ability to recall lore about historical events, \n                                legendary people, ancient kingdoms, past disputes, recent wars, and lost civilizations.</p>\n\n                                <h1>Investigation</h1>\n                                <p>When you look around for clues and make deductions based on those clues, you make an Intelligence (Investigation) check. You might deduce the location of a hidden object, \n                                discern from the appearance of a wound what kind of weapon dealt it, or determine the weakest point in a tunnel that could cause it to collapse. Poring through ancient scrolls \n                                in search of a hidden fragment of knowledge might also call for an Intelligence (Investigation) check.</p>\n\n                                <h1>Nature</h1>\n                                <p>Your Intelligence (Nature) check measures your ability to recall lore about terrain, plants and animals, the weather, and natural cycles.</p>\n\n                                <h1>Religion</h1>\n                                <p>Your Intelligence (Religion) check measures your ability to recall lore about deities, rites and prayers, \n                                religious hierarchies, holy symbols, and the practices of secret cults.</p>\n\n                            </PopUp>\n                        \n                            <td className=\"Holder\">\n                                <div className=\"Right\">\n                                    <Incrementor\n                                    value = {valueInt}\n                                    Counter = {IntCount}\n                                    availPoints = {availablePoints}\n                                    CurrentPoints = {usedPoints}\n                                    Mod = {IntModCount}\n                                    onChange = {(v,count, points, trackpoints, modpoints) => {\n                                        if(usedPoints >=0 && usedPoints<=27){\n                                            setIntValue(v);\n\n                                            setIntCounter(count);\n\n                                            trackUsedPoints(trackpoints);\n                                            trackAvailablePoints(points);\n                                            // if ((IntCount % 2 ===0 && IntCount>0) || (usedPoints === 27|| availablePoints ===0) ){\n                                            //     setIntModCounter(modpoints);\n                                            //     // if (IntCount% 2 ===0){\n                                            //     //     setIntModCounter(modpoints);\n    \n                                            //     // }\n                                                \n    \n                                            // }\n                                            if ((availablePoints % 2 ===1  && valueInt>8 && valueInt<15) && availablePoints<27){\n                                                setIntModCounter(modpoints);\n                                                // if (IntCount% 2 ===0){\n                                                //     setIntModCounter(modpoints);\n    \n                                                // }\n                                                \n    \n                                            }\n                                        }\n                                    \n\n\n                                        // if(availablePoints<0){\n                                        //     alert(\"All 27 points used\")\n                                        //     trackAvailablePoints(points+1)\n                                        // }\n                                        // else{\n                                        //     trackAvailablePoints(points)\n                                        \n\n                                        // }\n                                    \n                                    \n                                    }} \n                                    min={min} \n                                    max={max} />\n                                </div>\n                            </td>\n                            <td className=\"race-mod\">\n                                RM\n                            </td>\n                            <td className=\"Left\">\n                                    <div className=\"Display\">{valueInt}</div>\n                            </td>\n                            <td>&nbsp;</td>\n                            <td>\n                                <div>{IntModCount}</div>\n                            </td>\n                            <td>&nbsp;</td>\n                            <td>\n                                <div>{IntCount}</div>\n                            </td>\n                        </tr>\n                        <tr id=\"wis\" class=\"stats-row\">\n                        \n                            <th button onClick={() => setButtonPopup5(true)}><Cursor>WIS</Cursor> </th>\n                            \n                            <PopUp trigger ={buttonPopup5} setTrigger = {setButtonPopup5}>\n                            <h1>Wisdom</h1>\n                            <p>Wisdom reflects how attuned you are to the world around you and represents perceptiveness and intuition.</p>\n\n                            <h1>Wisdom Checks</h1>\n                            <p> A Wisdom check might reflect an effort to read body language, understand someone's feelings, notice things about the environment, \n                            or care for an injured person. The Animal Handling, Insight, Medicine, \n                            Perception, and Survival skills reflect aptitude in certain kinds of Wisdom checks.</p>\n\n                            <h1>Animal Handling</h1>\n                            <p>When there is any question whether you can calm down a domesticated animal, keep a mount from getting spooked, \n                            or intuit an animal's intentions, the GM might call for a Wisdom (Animal Handling) check. \n                            You also make a Wisdom (Animal Handling) check to control your mount when you attempt a risky maneuver.</p>\n\n                            <h1>Insight</h1>\n                            <p>Your Wisdom (Insight) check decides whether you can determine the true intentions of a creature, such as when searching out a \n                            lie or predicting someone's next move. Doing so involves gleaning clues from body language, speech habits, \n                            and changes in mannerisms.</p>\n\n                            <h1>Medicine</h1>\n                            <p>A Wisdom (Medicine) check lets you try to stabilize a dying companion or diagnose an illness.</p>\n\n                            <h1>Perception</h1>\n                            <p>Your Wisdom (Perception) check lets you spot, hear, or otherwise detect the presence of something. It measures your general awareness of your surroundings and the keenness of your senses. For example, \n                            you might try to hear a conversation through a closed door, eavesdrop under an open window, or hear monsters moving stealthily in the forest. Or you might try to spot things that are obscured or easy to miss, \n                            whether they are orcs lying in ambush on a road, thugs hiding in the shadows of an alley, or candlelight under a closed secret door.</p>\n                            \n                            <h1>Survival</h1>\n                            <p>The GM might ask you to make a Wisdom (Survival) check to follow tracks, hunt wild game, guide your group through frozen wastelands, identify signs that owlbears live nearby, \n                            predict the weather, or avoid quicksand and other natural hazards.</p>\n\n                            </PopUp>\n                \n                            <td className=\"Holder\">\n                                <div className=\"Right\">\n                                    <Incrementor\n                                    value = {valueWis}\n                                    Counter = {WisCount}\n                                    availPoints = {availablePoints}\n                                    CurrentPoints = {usedPoints}\n                                    Mod = {WisModCount}\n                                    onChange = {(v,count, points, trackpoints, modpoints) => {\n                                        if(usedPoints >=0 && usedPoints<=27){\n                                            setWisValue(v);\n                                            setWisCounter(count);\n\n                                            trackUsedPoints(trackpoints);\n                                            trackAvailablePoints(points);\n                                            // if((WisCount % 2 ===0 && WisCount>0)||(usedPoints === 27|| availablePoints ===0)){\n                                            //     setWisModCounter(modpoints);\n                                            //     // if(WisCount% 2 ===0){\n                                            //     //     setWisModCounter(modpoints);\n    \n                                            //     // }\n    \n    \n                                            // }\n                                            if((availablePoints % 2 ===1 && valueWis>8 && valueWis<15) && availablePoints<27){\n                                                setWisModCounter(modpoints);\n                                                // if(WisCount% 2 ===0){\n                                                //     setWisModCounter(modpoints);\n    \n                                                // }\n    \n    \n                                            }\n                                        }\n                                        \n                                    \n                                    \n\n                                        // if(availablePoints<0){\n                                        //     alert(\"All 27 points used\")\n                                        //     trackAvailablePoints(points+1)\n                                        // }\n                                        // else{\n                                        //     trackAvailablePoints(points)\n                                        \n\n                                        // }\n                                        \n                                    }}\n                                    min={min} \n                                    max={max} />\n                                </div>\n                            </td>\n                            <td className=\"race-mod\">\n                                RM\n                            </td>\n                            <td className=\"Left\">\n                                    <div className=\"Display\">{valueWis}</div>\n                            </td>\n                            <td>&nbsp;</td>\n                            <td>\n                                <div>{WisModCount}</div>\n                            </td>\n                            <td>&nbsp;</td>\n                            <td>\n                                <div>{WisCount}</div>\n                            </td>\n                        </tr>\n                        <tr id=\"cha\" class=\"stats-row\">\n                        \n                            <th button onClick={() => setButtonPopup6(true)}><Cursor>CHA</Cursor> </th>\n                            \n                            <PopUp trigger ={buttonPopup6} setTrigger = {setButtonPopup6}>\n                            <h1>Charisma</h1>\n                            <p>Charisma measures your ability to interact effectively with others. \n                            It includes such factors as confidence and eloquence, \n                            and it can represent a charming or commanding personality.</p>\n\n                            <h1>Charisma Checks</h1>\n                            <p>A Charisma check might arise when you try to influence or entertain others, when you try to make an impression or tell a convincing lie, \n                            or when you are navigating a tricky social situation. The Deception, Intimidation, Performance, and Persuasion skills \n                            reflect aptitude in certain kinds of Charisma checks.</p>\n\n                            <h1>Deception</h1>\n                            <p>Your Charisma (Deception) check determines whether you can convincingly hide the truth, either verbally or through your actions. \n                            This deception can encompass everything from misleading others through ambiguity to telling outright lies. \n                            Typical situations include trying to fast-talk a guard, con a merchant, earn money through gambling, pass yourself off in a disguise, \n                            dull someone's suspicions with false assurances, or maintain a straight face while telling a blatant lie.</p>\n\n                            <h1>Intimidation</h1>\n                            <p>When you attempt to influence someone through overt threats, hostile actions, and physical violence, the GM might ask you to make a Charisma (Intimidation) check. \n                            Examples include trying to pry information out of a prisoner, convincing street thugs to back down from a confrontation, \n                            or using the edge of a broken bottle to convince a sneering vizier to reconsider a decision.</p>\n\n                            <h1>Performance</h1>\n                            <p>Your Charisma (Performance) check determines how well you can delight an audience with music, \n                            dance, acting, storytelling, or some other form of entertainment.</p>\n\n                            <h1>Persuasion</h1>\n                            <p>When you attempt to influence someone or a group of people with tact, social graces, or good nature, the GM might ask you to make a Charisma (Persuasion) check. \n                            Typically, you use persuasion when acting in good faith, to foster friendships, make cordial requests, or exhibit proper etiquette. Examples of persuading others include convincing a \n                            chamberlain to let your party see the king, negotiating peace between warring tribes, or inspiring a crowd of townsfolk.</p>\n                            </PopUp>\n                            \n                            <td className=\"Holder\">\n                                <div className=\"Right\">\n                                    <Incrementor\n                                    value = {valueCha}\n                                    Counter = {ChaCount}\n                                    availPoints = {availablePoints}\n                                    CurrentPoints = {usedPoints}\n                                    Mod = {ChaModCount}\n                                    onChange = {(v,count, points, trackpoints, modpoints) => {\n                                        if(usedPoints >=0 && usedPoints<=27){\n                                            setChaValue(v);\n                                            setChaCounter(count);\n\n                                            trackUsedPoints(trackpoints);\n                                            trackAvailablePoints(points);\n                                            // if ((ChaCount % 2 ===0 && ChaCount>0) || (usedPoints === 27|| availablePoints ===0)){\n                                            //     setChaModCounter(modpoints);\n                                            //     // if (ChaCount <=15 && ChaCount% 2 ===0 ){\n                                            //     //     setChaModCounter(modpoints);\n    \n                                            //     // }\n                                                \n    \n                                            // }\n                                            if ((availablePoints % 2 ===1  && valueCha>8 && valueCha<15) && availablePoints<27){\n                                                setChaModCounter(modpoints);\n                                                // if (ChaCount <=15 && ChaCount% 2 ===0 ){\n                                                //     setChaModCounter(modpoints);\n    \n                                                // }\n                                                \n    \n                                            }\n                                        }\n                                       \n                                    \n\n                                        // if(availablePoints<0){\n                                        //     alert(\"All 27 points used\")\n                                        //     trackAvailablePoints(points+1)\n                                        // }\n                                        // else{\n                                        //     trackAvailablePoints(points)\n                                        \n\n                                        // }\n\n\n\n                                    \n                                    \n                                    }} \n                                    min={min} \n                                    max={max} />\n                                </div>\n                            </td>\n                            <td className=\"race-mod\">\n                                RM\n                            </td>\n                            <td className=\"Left\">\n                                    <div className=\"Display\">{valueCha}</div>\n                            </td>\n                            <td>&nbsp;</td>\n                            <td>\n                                <div>{ChaModCount}</div>\n                            </td>\n                            <td>&nbsp;</td>\n                            <td>\n                                <div>\n                                    {ChaCount}\n                                </div>\n                                <div> \n\n\n                                </div>\n                            </td>\n                        </tr>\n                        <tr></tr>\n                    </tbody>\n                </table>\n                <div>\n                <label> Total Points:{totalPoints}</label> <br/ >\n                <label> Available Points:{availablePoints}</label> <br/ >\n                <label> Used Points:{usedPoints}</label> <br/ >\n                </div>\n               \n\n                {/* <button onClick={onSubmit}>Save Build</button> */}\n            </body>\n        </div>\n    )\n}\n\nexport default StatCalc;\n","import Axios from 'axios';\nimport React, { useState, useEffect } from \"react\";\nimport ClassImageMap from \"../../media/classImages\";\nimport imgMap from \"../../media/raceImages\";\nimport Incrementor from '../Incrementor/Inc';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport './stats.css';\nimport { \n    BackgroundContainer, \n    BuildTitle, \n    DropDownStyle, \n} from './BuildsElements';\n\nimport RaceSelect from './RaceSelect';\nimport ClassSelect from './ClassSelect';\nimport StatCalc from './StatCalc';\nimport store from '../../store';\nimport { Container, Grid,Paper } from '@mui/material';\nimport { Box, grid } from '@mui/system';\nimport { IconButton,Collapse} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Alert } from '@mui/material';\n\nconst min = 8;\nconst max = 15;\nconst totalPoints = 27;\n\nconst BuildsPage = (props) => {\n    const [open, setOpen] = React.useState(false);\n\n    //*************************************************/\n    //Pushed to the API\n    //Name\n    const [name, setName] = useState(\"\");\n    //Race Type\n    const [selectedRace, setSelectedRace] = useState('none');\n    //Class Type\n    const [selectedClass, setSelectedClass] = useState('none');\n    //Stats\n    const [valueStr, setStrValue] = useState(min);\n    const [valueDex, setDexValue] = useState(min);\n    const [valueCon, setConValue] = useState(min);\n    const [valueInt, setIntValue] = useState(min);\n    const [valueWis, setWisValue] = useState(min);\n    const [valueCha, setChaValue] = useState(min);\n    const[StrModCount, setStrModCounter] = useState(-1)\n    const[DexModCount, setDexModCounter] = useState(-1)\n    const[ConModCount, setConModCounter] = useState(-1)\n    const[IntModCount, setIntModCounter] = useState(-1)\n    const[WisModCount, setWisModCounter] = useState(-1)\n    const[ChaModCount, setChaModCounter] = useState(-1)\n\n\n    const [heroId, setHeroId] = useState(0);\n    const storeState = store.getState();\n    const userId = storeState.auth.user.id;\n    //*********************   End of push API ****************************/\n    // console.log(\"Here is the store stuff:\", user);\n\n\n    //********************************************************** */\n    //Stats Page JS\n    const[StrCount, setStrCounter] = useState(0)\n    const[DexCount, setDexCounter] = useState(0)\n    const[ConCount, setConCounter] = useState(0)\n    const[IntCount, setIntCounter] = useState(0)\n    const[WisCount, setWisCounter] = useState(0)\n    const[ChaCount, setChaCounter] = useState(0)\n    \n    const[availablePoints, trackAvailablePoints] = useState(27)\n    const[usedPoints, trackUsedPoints] = useState(0)\n    //************************************************************ */\n\n    //onSubmit function\n    const onSubmit = (e) => {\n        e.preventDefault();\n        // RESET VALUES\n        setOpen(true);\n        setName(\"\");\n        setSelectedRace('none');\n        setSelectedClass('none');\n        setStrValue(min);\n        setDexValue(min);\n        setConValue(min);\n        setIntValue(min);\n        setWisValue(min);\n        setChaValue(min);\n        setStrCounter(0);\n        setDexCounter(0);\n        setConCounter(0);\n        setIntCounter(0);\n        setWisCounter(0);\n        setChaCounter(0);\n        trackAvailablePoints(27);\n        trackUsedPoints(0);\n        // end of reset\n        const postData = {\n            name,\n            race_type: selectedRace,\n            class_type: selectedClass,\n            STR: valueStr,\n            DEX: valueDex,\n            CON: valueCon,\n            INT: valueInt,\n            WIS: valueWis,\n            CHA: valueCha,\n            hero: userId\n        };\n\n        Axios.post(`${process.env.REACT_APP_API_URL}/heroes/`,\n        postData, )\n        .then((res) => {\n            console.log(res);\n        })\n        .catch((err) => {\n            console.error( err ) ;\n        });\n\n    }\n    //*************************************************/\n\n\n    const [raceOptions, setRaceOptions] = useState([]);\n    \n    const handleChange = e => {\n        // console.log(\"testsdfsdf\",e.target.data)\n        setSelectedRace(e.target.value);\n        setOpen(false);\n    }\n    \n    // get race api call\n    const [allRaces, setAllRaces] = useState(\"\");\n    const getAllRaces = async () => {\n        //console.log(\"Here are props: \", props);\n        await Axios.get(\"https://www.dnd5eapi.co/api/races\").then(resp =>{\n            // console.log(resp.data.results)\n            const options = resp.data.results.map((race) => {\n                return ({\n                    value: race.index,\n                    label: race.name\n                })\n            })\n            setAllRaces(resp.data);\n            setRaceOptions(options);\n\n        }).catch(err =>{\n            console.error(err);\n        });\n    };\n    \n    //const newArr = allRaces.map()\n    const [race,setRace] = useState(\"\");\n    const getRace = (label) =>{\n        // console.log(allRaces);\n        // console.log(\"tes:\", label);\n        Axios.get(`https://www.dnd5eapi.co/api/races/${label}`).then(resp =>{\n            // console.log(resp);\n            setRace(resp.data);\n        }).catch(err =>{\n            console.error(err);\n        })\n        // console.log(selectedValue)\n    };\n    \n    useEffect(() => {\n        getAllRaces();\n        // console.log(\"Here is the store stuff:\", user);\n    }, [])\n\n    useEffect( () =>{\n        console.log(raceOptions)\n    },[raceOptions])\n\n    useEffect( () =>{\n        console.log('Selected value', selectedRace)\n        getRace(selectedRace);\n    },[selectedRace])\n\n    //***************************** Classes JS below ***************************** */\n\n    const [classOptions, setClassOptions] = useState([]);\n\n    const handleChange2 = e => {\n        // console.log(\"testsdfsdf\",e.target.data)\n        setSelectedClass(e.target.value);\n    }\n\n    // get race api call\n    const [allClasses, setAllClasses] = useState(\"\");\n    const getAllClasses = async () => {\n        await Axios.get(\"https://www.dnd5eapi.co/api/classes\").then(resp =>{\n            console.log(resp.data.results)\n            const options = resp.data.results.map((classes) => {\n                return ({\n                    value: classes.index,\n                    label: classes.name\n                })\n            })\n            setAllClasses(resp.data);\n            setClassOptions(options);\n\n        }).catch(err =>{\n            console.error(err);\n        });\n    };\n    \n    //const newArr = allRaces.map()\n    const [classes,setClasses] = useState(\"\");\n    const getClass = (label) =>{\n\n        Axios.get(`https://www.dnd5eapi.co/api/classes/${label}`).then(resp =>{\n            setClasses(resp.data);\n\n            //makes the list for skill proficiencies\n            let html = '';\n            (resp.data.proficiency_choices[0].from).forEach(function(prof) {\n                html+= '<li>' + prof.index;\n            });\n            html = '<ul>' + html +'<ul>'\n            // console.log(html)\n            document.querySelector('#profChoices').innerHTML = html;\n            //end of skill proficiency code\n\n            //make list for the equipment proficiencies\n            let html2 = '';\n            (resp.data.proficiencies).forEach(function(prof) {\n                html2+= '<li>' + prof.index;\n            });\n            html2 = '<ul>' + html2 +'<ul>'\n            // console.log(html2)\n            document.querySelector('#equipChoices').innerHTML = html2;\n            //end of equipment proficiencies\n\n            //make list for stat bonus\n            let html3 = '';\n            (resp.data.saving_throws).forEach(function(bonus) {\n                html3+= '<li>' + bonus.name;\n            });\n            html3 = '<ul>' + html3 +'<ul>'\n            // console.log(html3)\n            document.querySelector('#statBonus').innerHTML = html3;\n            //end of stat bonus\n        }).catch(err =>{\n            console.error(err);\n        })\n        // console.log(selectedValue)\n    };\n    \n    useEffect(() => {\n        getAllClasses();\n    }, [])\n\n    useEffect( () =>{\n        console.log(classOptions)\n    },[classOptions])\n\n    useEffect( () =>{\n        console.log('Selected value', selectedClass)\n        getClass(selectedClass);\n    },[selectedClass])\n\n    // console.log(classes)\n\n    return (\n    \n        <BackgroundContainer>\n\n            {/* race options */}\n            <RaceSelect \n                selectedRace={selectedRace} \n                handleChange={handleChange} \n                race={race} \n                raceOptions={raceOptions}\n            />\n\n            {/* class options */}\n            <ClassSelect \n                selectedClass={selectedClass} \n                classes={classes}\n                classOptions={classOptions} \n                handleChange2={handleChange2}\n            />\n\n            {/* Stat Calculator */}\n           <StatCalc \n                usedPoints={usedPoints}\n                availablePoints={availablePoints} \n                totalPoints={totalPoints}\n                trackUsedPoints={trackUsedPoints}\n                trackAvailablePoints={trackAvailablePoints}\n                min={min} \n                max={max} \n                valueStr={valueStr}\n                valueDex={valueDex}\n                valueCon={valueCon}\n                valueInt={valueInt}\n                valueWis={valueWis}\n                valueCha={valueCha}\n                StrCount={StrCount}\n                setStrValue={setStrValue}\n                setStrCounter={setStrCounter}\n                DexCount={DexCount}\n                setDexValue={setDexValue}\n                setDexCounter={setDexCounter}\n                ConCount={ConCount}\n                setConValue={setConValue}\n                setConCounter={setConCounter}\n                IntCount={IntCount}\n                setIntValue={setIntValue}\n                setIntCounter={setIntCounter}\n                WisCount={WisCount}\n                setWisValue={setWisValue}\n                setWisCounter={setWisCounter}\n                ChaCount={ChaCount}\n                setChaValue={setChaValue}\n                setChaCounter={setChaCounter}\n                \n                //setting up mods\n                StrModCount = {StrModCount}\n                setStrModCounter= {setStrModCounter}\n                DexModCount = {DexModCount}\n                setDexModCounter = {setDexModCounter}\n                ConModCount = {ConModCount}\n                setConModCounter = {setConModCounter}\n                IntModCount = {IntModCount}\n                setIntModCounter = {setIntModCounter}\n                WisModCount = {WisModCount}\n                setWisModCounter = {setWisModCounter}\n                ChaModCount = {ChaModCount}\n                setChaModCounter = {setChaModCounter}\n            />\n    \n            <Container>\n                <Box sx={{ flexGrow: 1,marginTop:10 }}>\n                    <Grid container spacing={3} columns={18}>\n                        <Grid item xs={6}> \n                            \n                        </Grid>\n\n                        <Grid item xs={6}> \n                            <Box sx={{ width: '100%' }}>\n                                <Collapse in={open}>\n                                    <Alert\n                                        severity=\"success\"\n                                        action={\n                                            <IconButton\n                                            aria-label=\"close\"\n                                            color=\"inherit\"\n                                            size=\"small\"\n                                            onClick={() => {\n                                                setOpen(false);\n                                            }}\n                                            >\n                                            <CloseIcon fontSize=\"inherit\" />\n                                            </IconButton>\n                                        }\n                                        sx={{ mb: 2 }}\n                                    >\n                                        Character was saved successfully!!!\n                                    </Alert>\n                                </Collapse>\n                            </Box>\n\n                            <TextField\n                                value={name}\n                                label=\"Enter your name\"\n                                style={{backgroundColor: 'white', color: '#FFFFFF'}}\n                                onChange={(e) => {\n                                setName(e.target.value);\n                                // console.log(name);\n                                }}\n                                variant=\"filled\"\n                            /> \n                            {\n                                name === \"\" || selectedRace === 'none' || selectedClass === 'none' ?\n                            <Button \n                                variant=\"contained\" \n                                disabled \n                                // style={{backgroundColor: '#12824C', color: '#FFFFFF'}}\n                            >\n                                Save Build\n                            </Button>\n                            :\n                            <Button \n                                variant=\"contained\" \n                                onClick={onSubmit}\n                                // style={{backgroundColor: '#12824C', color: '#FFFFFF'}}\n                            >\n                                Save Build\n                            </Button>\n                            }\n                        </Grid>\n\n                        <Grid item xs={6}> \n                            \n                        </Grid>\n                    </Grid>\n                </Box>\n            </Container>\n            \n            <br /><br />\n            <br /><br />\n            <br /><br />\n            <br /><br />\n            <br /><br />\n        </BackgroundContainer>\n    )\n}\nexport default BuildsPage\n","import React, {useState} from 'react';\nimport BuildsPage from '../components/BuildsPage';\n// import Select from 'react-select';\n//import background from '../media/images/buildsbg2.png';\n//import example from '../media/images/ExamplePlayer.jpg';\n// import DropDown from '../components/DropDown';\n\nconst Builds = () => {\n \n   \n    return (\n    <>\n        <BuildsPage/>\n    </>\n    )\n}\nexport default Builds;","import { useState } from 'react';\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\nimport { sendMessage, isTyping } from 'react-chat-engine';\n\nconst MessageForm = (props) => {\n  const [value, setValue] = useState('');\n  const { chatId, creds } = props;\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n\n    isTyping(props, chatId);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const text = value.trim();\n\n    if (text.length > 0) {\n      sendMessage(creds, chatId, { text });\n    }\n\n    setValue('');\n  };\n\n  //sends the image\n  const handleUpload = (event) => {\n    sendMessage(creds, chatId, { files: event.target.files, text: '' });\n  };\n\n    //for picture upload and icon\n  return (\n    <form className=\"message-form\" onSubmit={handleSubmit}>\n      <input\n        className=\"message-input\"\n        placeholder=\"Send a message...\"\n        value={value}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n        style={{fontFamily:'Helvetica'}}\n      />\n      <label htmlFor=\"upload-button\">\n        <span className=\"image-button\">\n          <PictureOutlined className=\"picture-icon\" />\n        </span>\n      </label>\n      <input\n        type=\"file\"\n        multiple={false}\n        id=\"upload-button\"\n        style={{ display: 'none' }}\n        onChange={handleUpload.bind(this)}\n      />\n      <button type=\"submit\" className=\"send-button\">\n        <SendOutlined className=\"send-icon\" />\n      </button>\n    </form>\n  );\n};\n\nexport default MessageForm;","const MyMessage = ({ message }) => {\n    if (message.attachments && message.attachments.length > 0) {\n      return (\n        <img\n          src={message.attachments[0].file}\n          alt=\"message-attachment\"\n          className=\"message-image\"\n          style={{ float: 'right', height: '30px' }}\n        />\n      );\n    }\n  \n    return (\n      <div className=\"message\" style={{ float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#452487', fontFamily: 'Helvetica' }}>\n        {message.text}\n      </div>\n    );\n  };\n  \n  export default MyMessage;\n\n  ","const TheirMessage = ({ lastMessage, message }) => {\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\n  \n    return (\n      <div className=\"message-row\">\n        {isFirstMessageByUser && (\n          <div\n            className=\"message-avatar\"\n            style={{ backgroundImage: message.sender && `url(${message.sender.avatar})` }}\n          />\n        )}\n        {message.attachments && message.attachments.length > 0\n          ? (\n            <img\n              src={message.attachments[0].file}\n              alt=\"message-attachment\"\n              className=\"message-image\"\n              style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\n            />\n          )\n          : (\n            <div className=\"message\" style={{ float: 'left', backgroundColor: '#CABCDC', marginRight: isFirstMessageByUser ? '4px' : '48px', fontFamily: 'Helvetica' }}>\n              {message.text}\n            </div>\n          )}\n      </div>\n    );\n  };\n  \n  export default TheirMessage;","import MessageForm from \"./MessagForm\";\nimport MyMessage from \"./MyMessage\";\nimport TheirMessage from \"./TheirMessage\";\n\nconst ChatFeed = (props) => {\n    const { chats, activeChat, userName, messages } = props;\n  \n    const chat = chats && chats[activeChat];\n  \n    /**detetermins the read receipts depending on who send the message */\n    const renderReadReceipts = (message, isMyMessage) => chat.people.map((person, index)=> person.last_read === message.id && (\n      <div\n        key={`read_${index}`}\n        className=\"read-receipt\"\n        style={{\n          float: isMyMessage ? 'right' : 'left',\n          backgroundImage: person.person.avatar && `url(${person.person.avatar})`,\n        }}\n      />\n    ));\n  \n    //*maps the messages to the users on the server.*/\n    const renderMessages = () => {\n      const keys = Object.keys(messages);\n  \n      return keys.map((key, index) => {\n        const message = messages[key];\n        const lastMessageKey = index === 0 ? null : keys[index - 1];\n        const isMyMessage = userName === message.sender.username;\n        console.log(userName)\n  \n        /**Here determined whether the message is from current user or other user */\n        return (\n          <div key={`msg_${index}`} style={{ width: '100%' }}>\n            <div className=\"message-block\">\n              {isMyMessage\n                ? <MyMessage message={message} />\n                : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />}\n            </div>\n            <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\n              {renderReadReceipts(message, isMyMessage)}\n            </div>\n          </div>\n        );\n      });\n    };\n  \n    if (!chat) return <div />;\n  \n    return (\n      <div className=\"chat-feed\">\n        <div className=\"chat-title-container\">\n          <div className=\"chat-title\">{chat?.title}</div>\n          <div className=\"chat-subtitle\">\n            {chat.people.map((person) => ` ${person.person.username}`)}\n          </div>\n        </div>\n        {renderMessages()}\n        <div style={{ height: '100px' }} />\n        <div className=\"message-form-container\">\n          <MessageForm {...props} chatId={activeChat} />\n        </div>\n      </div>\n    );\n  };\n  \n  export default ChatFeed;","import React, {useState} from 'react';\nimport ChatFeed from './ChatFeed';\nimport { ChatEngine } from 'react-chat-engine';\nimport store from '../../store';\nimport './Chat.css'\n\n\nconst ChatSection = () => {\n    const storeState = store.getState();\n    const userName = storeState.auth.user.name;\n    const userPass = storeState.auth.user.chat_pass;\n    console.log(userName);\n    console.log(userPass);\n    \n    return (\n        <ChatEngine\n            height='90vh'\n            // userName='testuser'\n            // userSecret='123'\n            userName={userName}\n            userSecret={userPass}\n            projectID='df4300d4-fab2-4fac-a16f-6b7e007f7a8d'\n            renderChatFeed={(chatAppProps)=> <ChatFeed {... chatAppProps}/>}\n\t\t/>\n    )\n}\nexport default ChatSection;\n            //when the user signs up, it is going to store the signed up password and not hashed. \n            //We are trying to get the hashed password from ReduxStore but it is not the same as the password in ChatEngine\n            //TODO: make ChatEngine store the hashed password and no the user input password. ","import React, {useState} from 'react';\nimport ChatSection from '../components/ChatSection';\n\nconst Chat = () => {\n\n    return (\n        <>\n\n            <ChatSection/>\n        </>\n    )\n}\n\nexport default Chat;","import React, {useState} from 'react';\n\n// import '../stats.css';\nimport Incrementor from '../components/Incrementor/Inc';\nimport { Link } from 'react-router-dom';\n\n\nconst min = 8;\nconst max = 15;\nconst totalPoints = 27;\n\nconst HeroStats = () => {\n\n    const [valueStr, setStrValue] = useState(min)\n    const [valueDex, setDexValue] = useState(min)\n    const [valueCon, setConValue] = useState(min)\n    const [valueInt, setIntValue] = useState(min)\n    const [valueWis, setWisValue] = useState(min)\n    const [valueCha, setChaValue] = useState(min)\n    \n    const[StrCount, setStrCounter] = useState(0)\n    const[DexCount, setDexCounter] = useState(0)\n    const[ConCount, setConCounter] = useState(0)\n    const[IntCount, setIntCounter] = useState(0)\n    const[WisCount, setWisCounter] = useState(0)\n    const[ChaCount, setChaCounter] = useState(0)\n    \n    const[availablePoints, trackAvailablePoints] = useState(27)\n    const[usedPoints, trackUsedPoints] = useState(0)\n\n    function checkPoints(availablePoints, usedPoints){\n\n        if(availablePoints<0 || usedPoints>27){\n            alert(\"you out of points homie, resetting calculator\")\n            setStrValue(min)\n            setDexValue(min)\n            setConValue(min)\n            setIntValue(min)\n            setWisValue(min)\n            setChaValue(min)\n            setStrCounter(min)\n            setDexCounter(min)\n            setConCounter(min)\n            setIntCounter(min)\n            setWisCounter(min)\n            setChaCounter(min)\n            trackAvailablePoints(27)\n            trackUsedPoints(0)\n            \n        }\n       \n        \n\n    }\n    \n   \n\n    return (\n        <>\n \n            <h1 style={{textAlign: \"center\"}}>Point-Buy Calculator</h1>\n\n            <body id=\"stats-body\">\n                <table id = \"point-buy\" style={{width: \"100%\"}}>\n                    <tbody>\n                        <tr class = \"stats-header\">\n                            <th></th>\n                            <th>Base</th>\n                            <th class=\"operator\"></th>\n                            <th></th>\n                            <th class=\"operator\"></th>\n                            <th>Finalscore</th>\n                            <th></th>\n                            <th>Mod</th>\n                            <th></th>\n                            <th>Cost</th>\n                        </tr>\n                        <tr id=\"str\" class=\"stats-row\">\n                            <th>STR</th>\n                            <td className=\"Holder\">\n                                <div className=\"Right\">\n                                    <Incrementor\n                                    value = {valueStr}\n                                    Counter = {StrCount}\n                                    availPoints = {availablePoints}\n                                    CurrentPoints = {usedPoints} \n                                    onChange = {\n                                        (v,count, points, trackpoints) => {\n                                            setStrValue(v);\n                                            setStrCounter(count);\n                                            \n                                            if(usedPoints>27 || availablePoints<0){\n                                                // alert(\"Sorry homie, you out of points. Resetting now\")\n                                                // trackUsedPoints(trackpoints-1)\n                                                // trackAvailablePoints(points+1)\n                                                checkPoints(availablePoints,usedPoints)\n                                               \n\n                                                \n                                                \n                                            }\n                                            else{\n                                                trackUsedPoints(trackpoints)\n                                                trackAvailablePoints(points)\n                                                \n                                            }\n\n                                            \n                                           \n\n                                            // if(availablePoints<0){\n                                            //     alert(\"All 27 points used\")\n                                            //     trackAvailablePoints(points+1)\n                                            // }\n                                            // else{\n                                            //     trackAvailablePoints(points)\n                                            \n    \n                                            // }\n                                            \n                                        }\n                                    } \n                                    min={min} \n                                    max={max} />\n\n                                </div>\n                            </td>\n                            <td class=\"race-mod\">\n                                RM\n                            </td>\n                            <td className=\"Left\">\n                                    <td className=\"Display\">{valueStr}</td>\n                            </td>\n                            <td>&nbsp;</td>\n                            <td>\n                                <div><p>-1</p></div>\n                            </td>\n                            <td>&nbsp;</td>\n                            <td>\n                                {StrCount}\n                            </td>\n                        </tr>\n                        <tr id=\"dex\" class=\"stats-row\">\n                            <th>DEX</th>\n                            <td className=\"Holder\">\n                                <div className=\"Right\">\n                                    <Incrementor\n                                    value = {valueDex}\n                                    Counter ={DexCount}\n                                    availPoints = {availablePoints}\n                                    CurrentPoints = {usedPoints}\n                                    onChange = {\n                                        (v, count, points, trackpoints) => {\n\n                                        setDexValue(v)\n                                        setDexCounter(count)\n\n                                        if(usedPoints>27 || availablePoints<0){\n                                            // alert(\"Sorry homie, you out of points. Resetting now\")\n                                            \n                                            checkPoints(availablePoints,usedPoints)\n                                            // trackUsedPoints(trackpoints-1)\n                                            // trackAvailablePoints(points+1)\n                                            \n                                            \n                                        }\n                                        else{\n                                            trackUsedPoints(trackpoints)\n                                            trackAvailablePoints(points)\n                                            \n                                        }\n                                      \n\n                                        // if(availablePoints<0){\n                                        //     alert(\"All 27 points used\")\n                                        //     trackAvailablePoints(points+1)\n                                        // }\n                                        // else{\n                                        //     trackAvailablePoints(points)\n                                        \n\n                                        // }\n                                        \n\n                                    \n                                    }} \n                                    min={min} \n                                    max={max}\n                                    />\n                                </div>\n                            </td>\n                            <td className=\"race-mod\">\n                                RM\n                            </td>\n                            <td className=\"Left\">\n                                    <div className=\"Display\">{valueDex}</div>\n                            </td>\n                            <td>&nbsp;</td>\n                            <td>\n                                <div><p>-1</p></div>\n                            </td>\n                            <td>&nbsp;</td>\n                            <td>\n                                <div>\n                                    {DexCount}\n\n                                </div>\n                            </td>\n                        </tr>\n                        <tr id=\"con\" class=\"stats-row\">\n                            <th>CON</th>\n                            <td className=\"Holder\">\n                                <div className=\"Right\">\n                                    <Incrementor\n                                    value = {valueCon}\n                                    Counter = {ConCount}\n                                    availPoints = {availablePoints}\n                                    CurrentPoints = {usedPoints}\n                                    onChange = {(v,count, points, trackpoints) => {\n                                        setConCounter(count)\n                                        setConValue(v)\n\n                                        if(usedPoints>27 || availablePoints<0){\n                                            // alert(\"Sorry homie, you out of points. Resetting now\")\n\n                                            // trackUsedPoints(trackpoints-1)\n                                            // trackAvailablePoints(points+1)\n                                            checkPoints(availablePoints,usedPoints)\n                                            \n                                        }\n                                        else{\n                                            trackUsedPoints(trackpoints)\n                                            trackAvailablePoints(points)\n                                            \n                                        }\n                                      \n\n                                        // if(availablePoints<0){\n                                        //     alert(\"All 27 points used\")\n                                        //     trackAvailablePoints(points+1)\n                                        // }\n                                        // else{\n                                        //     trackAvailablePoints(points)\n                                        \n\n                                        // }\n\n                                    }} \n                                    min={min} \n                                    max={max} />\n                                </div>\n                            </td>\n                            <td className=\"race-mod\">\n                                RM\n                            </td>\n                            <td className=\"Left\">\n                                    <div className=\"Display\">{valueCon}</div>\n                            </td>\n                            <td>&nbsp;</td>\n                            <td>\n                                <div><p>-1</p></div>\n                            </td>\n                            <td>&nbsp;</td>\n                            <td>\n                                <div>{ConCount}</div>\n                            </td>\n                        </tr>\n                        <tr id=\"int\" class=\"stats-row\">\n                            <th>INT</th>\n                            <td className=\"Holder\">\n                                <div className=\"Right\">\n                                    <Incrementor\n                                    value = {valueInt}\n                                    Counter = {IntCount}\n                                    availPoints = {availablePoints}\n                                    CurrentPoints = {usedPoints}\n                                    onChange = {(v,count, points, trackpoints) => {\n                                        setIntValue(v);\n                                        \n                                        setIntCounter(count);\n\n                                        if(usedPoints>27 || availablePoints<0){\n                                            // alert(\"Sorry homie, you out of points. Resetting now\")\n                                           \n                                            // trackUsedPoints(trackpoints-1)\n                                            // trackAvailablePoints(points+1)\n                                            checkPoints(availablePoints,usedPoints)\n                                            \n                                        }\n                                        else{\n                                            trackUsedPoints(trackpoints)\n                                            trackAvailablePoints(points)\n                                            \n                                        }\n                                      \n\n\n                                        // if(availablePoints<0){\n                                        //     alert(\"All 27 points used\")\n                                        //     trackAvailablePoints(points+1)\n                                        // }\n                                        // else{\n                                        //     trackAvailablePoints(points)\n                                        \n\n                                        // }\n                                       \n                                    \n                                    }} \n                                    min={min} \n                                    max={max} />\n                                </div>\n                            </td>\n                            <td className=\"race-mod\">\n                                RM\n                            </td>\n                            <td className=\"Left\">\n                                    <div className=\"Display\">{valueInt}</div>\n                            </td>\n                            <td>&nbsp;</td>\n                            <td>\n                                <div><p>-1</p></div>\n                            </td>\n                            <td>&nbsp;</td>\n                            <td>\n                                <div>{IntCount}</div>\n                            </td>\n                        </tr>\n                        <tr id=\"wis\" class=\"stats-row\">\n                            <th>WIS</th>\n                            <td className=\"Holder\">\n                                <div className=\"Right\">\n                                    <Incrementor\n                                    value = {valueWis}\n                                    Counter = {WisCount}\n                                    availPoints = {availablePoints}\n                                    CurrentPoints = {usedPoints}\n                                    onChange = {(v,count, points, trackpoints) => {\n                                        setWisValue(v);\n                                        setWisCounter(count);\n\n                                        if(usedPoints>27 || availablePoints<0){\n                                            // alert(\"Sorry homie, you out of points. Resetting now\")\n                                           \n                                            // trackUsedPoints(trackpoints-1)\n                                            // trackAvailablePoints(points+1)\n                                            checkPoints(availablePoints,usedPoints)\n                                            \n                                        }\n                                        else{\n                                            trackUsedPoints(trackpoints)\n                                            trackAvailablePoints(points)\n                                            \n                                        }\n                                      \n                                      \n\n                                        // if(availablePoints<0){\n                                        //     alert(\"All 27 points used\")\n                                        //     trackAvailablePoints(points+1)\n                                        // }\n                                        // else{\n                                        //     trackAvailablePoints(points)\n                                        \n\n                                        // }\n                                        \n                                    }}\n                                    min={min} \n                                    max={max} />\n                                </div>\n                            </td>\n                            <td className=\"race-mod\">\n                                RM\n                            </td>\n                            <td className=\"Left\">\n                                    <div className=\"Display\">{valueWis}</div>\n                            </td>\n                            <td>&nbsp;</td>\n                            <td>\n                                <div><p>-1</p></div>\n                            </td>\n                            <td>&nbsp;</td>\n                            <td>\n                                <div>{WisCount}</div>\n                            </td>\n                        </tr>\n                        <tr id=\"cha\" class=\"stats-row\">\n                            <th>CHA</th>\n                            <td className=\"Holder\">\n                                <div className=\"Right\">\n                                    <Incrementor\n                                    value = {valueCha}\n                                    Counter = {ChaCount}\n                                    availPoints = {availablePoints}\n                                    CurrentPoints = {usedPoints}\n                                    onChange = {(v,count, points, trackpoints) => {\n                                        \n                                        setChaValue(v);\n                                        setChaCounter(count);\n\n                                        if(usedPoints>27 || availablePoints<0){\n                                            // alert(\"Sorry homie, you out of points. Resetting now\")\n                                            // trackUsedPoints(trackpoints-1)\n                                            // trackAvailablePoints(points+1)\n                                            checkPoints(availablePoints,usedPoints)\n                                            // alert(\"Sorry homie, you out of points. Resetting now\")\n                                            \n                                            \n                                        }\n                                        else{\n                                            trackUsedPoints(trackpoints)\n                                            trackAvailablePoints(points)\n                                            \n                                        }\n                                      \n\n                                        // if(availablePoints<0){\n                                        //     alert(\"All 27 points used\")\n                                        //     trackAvailablePoints(points+1)\n                                        // }\n                                        // else{\n                                        //     trackAvailablePoints(points)\n                                        \n\n                                        // }\n\n\n\n                                    \n                                    \n                                    }} \n                                    min={min} \n                                    max={max} />\n                                </div>\n                            </td>\n                            <td className=\"race-mod\">\n                                RM\n                            </td>\n                            <td className=\"Left\">\n                                    <div className=\"Display\">{valueCha}</div>\n                            </td>\n                            <td>&nbsp;</td>\n                            <td>\n                                <div><p>-1</p></div>\n                            </td>\n                            <td>&nbsp;</td>\n                            <td>\n                                <div>\n                                    {ChaCount}\n                                </div>\n                                <div> \n\n\n                                </div>\n                            </td>\n                        </tr>\n                        <tr></tr>\n                    </tbody>\n                </table>\n                <div>\n                <label> Total Points:{totalPoints}</label> <br/ >\n                <label> Available Points:{availablePoints}</label> <br/ >\n                <label> Used Points:{usedPoints}</label> <br/ >\n                </div>\n                <Link to =\"/classes\"><button>⇦ Classes </button></Link>\n                <br />\n                <Link to =\"/heroStats\"><button> Finish ⇨</button></Link>\n               \n                \n            </body>\n        </>\n    )\n}\n\nexport default HeroStats;","export default __webpack_public_path__ + \"static/media/buildsbg2.cf5f2325.png\";","import styled from \"styled-components\";\nimport background from \"../../media/images/buildsbg2.png\";\n\nexport const BGContainer = styled.div`\n    background-image: url(${background});\n    background-repeat: no-repeat;\n    background-size: cover;\n    justify-content: center;\n    width: 100wh;\n    height: 120vh;\n    color: white;\n    overflow: hidden;\n`\n\nexport const ClassSectionStyle = styled.div`\n    width: 10vw;\n    height: 10vh;\n    postion: absolute;\n    color: black;\n`\nexport const ClassTitle = styled.div`\n    display: flex;\n    justify-content: center;\n    height: 90vh;\n    color: white; \n    overflow: hidden;\n    padding-top: 25px;\n`\nexport const ClassTextBox = styled.div`\n    position: absolute;\n    text-color: black;\n    background-color: #000;\n    color: #fff;\n    opacity: .5;\n    justify-content: center;\n`\n\nexport const ClassImageBox = styled.div`\n    justify-content: center;\n    background-color: clear;\n    overflow: hidden;\n    height: 100vh;\n`\n\n// export const ClassGrid = styled.div`\n//     display: grid;\n//     height: 10vh;\n//     grid-template-rows: 0.2fr 1fr 0.5fr 0.5fr;\n//     grid-template-areas:\n//         \"textbox textbox textbox\"\n//         \"build build build\"\n//         \"dropdown dropdown dropdown\";\n//     text-align: left;\n//     grid-gap: 0.25rem;\n// `","import React, { useState, useEffect } from \"react\";\n// import Select from 'react-select';\n// import { Button } from 'react-scroll';\nimport Axios from 'axios';\n// import { get } from \"react-scroll/modules/mixins/scroller\";\nimport { BGContainer, ClassTitle, ClassSectionStyle, ClassTextBox, ClassImageBox} from './ClassesElements';\nimport { Link } from 'react-router-dom';\nimport ClassImageMap from \"../../media/classImages\";\n\n//Add the Components for the drop down elements here \n//Basically the CSS components\n\nconst ClassesSection = () => {\n\n    const [classOptions, setClassOptions] = useState([]);\n\n    const [selectedValue, setSelectedValue] = useState('none');\n    const handleChange = e => {\n        // console.log(\"testsdfsdf\",e.target.data)\n        setSelectedValue(e.target.value);\n    }\n\n    // get race api call\n    const [allClasses, setAllClasses] = useState(\"\");\n    const getAllClasses = async () => {\n        await Axios.get(\"https://www.dnd5eapi.co/api/classes\").then(resp =>{\n            console.log(resp.data.results)\n            const options = resp.data.results.map((classes) => {\n                return ({\n                    value: classes.index,\n                    label: classes.name\n                })\n            })\n            setAllClasses(resp.data);\n            setClassOptions(options);\n\n        }).catch(err =>{\n            console.error(err);\n        });\n    };\n    \n    //const newArr = allRaces.map()\n    const [classes,setClasses] = useState(\"\");\n    const getClass = (label) =>{\n\n        Axios.get(`https://www.dnd5eapi.co/api/classes/${label}`).then(resp =>{\n            setClasses(resp.data);\n\n            //makes the list for skill proficiencies\n            let html = '';\n            (resp.data.proficiency_choices[0].from).forEach(function(prof) {\n                html+= '<li>' + prof.index;\n            });\n            html = '<ul>' + html +'<ul>'\n            console.log(html)\n            document.querySelector('#profChoices').innerHTML = html;\n            //end of skill proficiency code\n\n            //make list for the equipment proficiencies\n            let html2 = '';\n            (resp.data.proficiencies).forEach(function(prof) {\n                html2+= '<li>' + prof.index;\n            });\n            html2 = '<ul>' + html2 +'<ul>'\n            console.log(html2)\n            document.querySelector('#equipChoices').innerHTML = html2;\n            //end of equipment proficiencies\n\n            //make list for stat bonus\n            let html3 = '';\n            (resp.data.saving_throws).forEach(function(bonus) {\n                html3+= '<li>' + bonus.name;\n            });\n            html3 = '<ul>' + html3 +'<ul>'\n            console.log(html3)\n            document.querySelector('#statBonus').innerHTML = html3;\n            //end of stat bonus\n        }).catch(err =>{\n            console.error(err);\n        })\n        // console.log(selectedValue)\n    };\n    \n    useEffect(() => {\n        getAllClasses();\n    }, [])\n\n    useEffect( () =>{\n        console.log(classOptions)\n    },[classOptions])\n\n    useEffect( () =>{\n        console.log('Selected value', selectedValue)\n        getClass(selectedValue);\n    },[selectedValue])\n\n    console.log(classes)\n    return (\n    \n        <BGContainer>\n            <ClassTitle>\n                <h1>\n                    Character Builder\n                    {\n                        selectedValue !== 'none' ?\n                        <ClassImageBox>\n                        <img src={ClassImageMap[classes.index]}></img> \n                        </ClassImageBox>\n                        : null\n                    }\n                </h1>\n                <ClassSectionStyle>\n                    <br /><br />\n                    <a style={{ color: 'white' }}>Class</a>\n\n                    <select value={selectedValue} onChange={handleChange}>\n                        <option value = 'none'> Select a class </option>\n                        {classOptions.map((classes) => {\n                            return(\n                                <option value = {classes.value}>\n                                    {classes.label}\n                                </option>\n                            )\n                        })}\n                    </select>\n                    \n                    <Link to =\"/heroStats\"><button> Hero Stats ⇨</button></Link>\n                    <Link to =\"/builds\"><button>⇦ Builds </button></Link>\n                    <br /><br />\n                    {\n                        //if selectedValue is not none, show all attributes\n                        selectedValue !== 'none' ?  \n                        <ClassTextBox>\n                            <a><h3>Stat Bonuses</h3></a>\n                            <div id=\"statBonus\"> </div>\n                            <a><h3>Hit Die</h3>{classes.hit_die}</a> \n                            {/* /div holds the chocies for profs/ */}\n                            <a><h3>Skill Proficiencies</h3></a> \n                            <div id=\"profChoices\"></div>\n                            <a><h3>Equipment Proficiencies</h3></a>\n                            <div id=\"equipChoices\"></div>\n                        </ClassTextBox>\n                        //else render nothing  \n                        : null\n                    }\n                </ClassSectionStyle>\n            </ClassTitle>\n        </BGContainer>\n    \n    )\n}\nexport default ClassesSection;\n","import React, {useState} from 'react';\n// import Select from 'react-select';\n\n//import background from '../media/images/buildsbg2.png';\n//import example from '../media/images/ExamplePlayer.jpg';\nimport ClassesSection from '../components/ClassesSection';\n\nconst Classes = () => {\n \n    return (\n    <>\n   \n       <ClassesSection/>\n    </>\n    )\n}\nexport default Classes;","import React from 'react';\nimport  { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n//Importing Containers\nimport Home from './containers/Home';\nimport Login from './containers/Login';\nimport Signup from './containers/Signup';\nimport Activate from './containers/Activate';\nimport ResetPassword from './containers/ResetPassword';\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm';\nimport Layout from './hocs/Layout';\n// import Dice from './containers/Dice';\nimport Library from './containers/Library';\nimport Builds from './containers/Builds';\nimport Chat from './containers/Chat';\nimport HeroStats from './containers/HeroStats';\nimport Classes from './containers/Classes';\n\nconst App = () => {\n \n  return (\n    <Provider store={store}>\n        <Router>\n            <Layout>\n                <Switch>\n                    {/* Home Route */}\n                    <Route exact path='/' component={Home} /> \n                    {/* Log-in Route */}\n                    <Route exact path='/login' component={Login} />\n                    {/* Sign-up Route */}\n                    <Route exact path='/signup' component={Signup} />\n                    {/* Reset Password Route */}\n                    <Route exact path='/reset-password' component={ResetPassword} />\n                    {/* Reset Password Confirmation Route */}\n                    <Route exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm} />\n                    {/* Activate Account Route */}\n                    <Route exact path='/activate/:uid/:token' component={Activate} />\n                    {/* Dice Route */}\n                    {/* <Route exact path='/dice' component={Dice} /> */}\n                    {/* Builds Route */}\n                    <Route exact path='/builds' component={Builds} />\n                    {/* Libary Route */}\n                    <Route exact path='/library' component={Library} />\n                    {/* Chat Route */}\n                    <Route exact path='/chat' component={Chat} />\n                    {/* HeroStats Route */}\n                    <Route exact path='/heroStats' component={HeroStats} />\n                    {/* Ckasses Route */}\n                    <Route exact path ='/classes' component = {Classes}/>\n                </Switch>\n            </Layout>\n        </Router>\n    </Provider>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}